!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _ImagingUploader=__webpack_require__(5),_ImagingUploader2=_interopRequireDefault(_ImagingUploader);$(function(){var imagingUploader=React.createElement("div",{className:"page-imaging-uploader"},React.createElement(_ImagingUploader2.default,{Module:"imaging_uploader",DataURL:loris.BaseURL+"/imaging_uploader/?format=json"}));ReactDOM.render(imagingUploader,document.getElementById("lorisworkspace"))})},,,,,function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_LogPanel=__webpack_require__(6),_LogPanel2=_interopRequireDefault(_LogPanel),_UploadForm=__webpack_require__(7),_UploadForm2=_interopRequireDefault(_UploadForm),_columnFormatter=__webpack_require__(8),_columnFormatter2=_interopRequireDefault(_columnFormatter),ImagingUploader=function(_React$Component){function ImagingUploader(props){_classCallCheck(this,ImagingUploader);var _this=_possibleConstructorReturn(this,(ImagingUploader.__proto__||Object.getPrototypeOf(ImagingUploader)).call(this,props));return _this.state={isLoaded:!1,filter:{}},_this.fetchData=_this.fetchData.bind(_this),_this.updateFilter=_this.updateFilter.bind(_this),_this}return _inherits(ImagingUploader,_React$Component),_createClass(ImagingUploader,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"fetchData",value:function(){$.ajax(this.props.DataURL,{method:"GET",dataType:"json",success:function(data){this.setState({Data:data,isLoaded:!0})}.bind(this),error:function(_error){console.error(_error)}})}},{key:"updateFilter",value:function(filter){this.setState({filter:filter})}},{key:"render",value:function(){if(!this.state.isLoaded)return React.createElement("button",{className:"btn-info has-spinner"},"Loading",React.createElement("span",{className:"glyphicon glyphicon-refresh glyphicon-refresh-animate"}));var tabList=[{id:"browse",label:"Browse"},{id:"upload",label:"Upload"}];return React.createElement(Tabs,{tabs:tabList,defaultTab:"browse",updateURL:!0},React.createElement(TabPane,{TabId:tabList[0].id},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-5"},React.createElement(FilterForm,{Module:"imaging_uploader",name:"imaging_filter",id:"imaging_filter",onUpdate:this.updateFilter,filter:this.state.filter},React.createElement(TextboxElement,this.state.Data.form.candID),React.createElement(TextboxElement,this.state.Data.form.pSCID),React.createElement(SelectElement,this.state.Data.form.visitLabel),React.createElement(ButtonElement,{type:"reset",label:"Clear Filters"}))),React.createElement("div",{className:"col-md-7"},React.createElement(_LogPanel2.default,null))),React.createElement("div",{id:"mri_upload_table"},React.createElement(StaticDataTable,{Data:this.state.Data.Data,Headers:this.state.Data.Headers,getFormattedCell:_columnFormatter2.default,Filter:this.state.filter}))),React.createElement(TabPane,{TabId:tabList[1].id},React.createElement(_UploadForm2.default,{form:this.state.Data.form})))}}]),ImagingUploader}(React.Component);ImagingUploader.propTypes={},ImagingUploader.defaultProps={},exports.default=ImagingUploader},function(module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),LogPanel=function(_React$Component){function LogPanel(props){_classCallCheck(this,LogPanel);var _this=_possibleConstructorReturn(this,(LogPanel.__proto__||Object.getPrototypeOf(LogPanel)).call(this,props));return _this.state={logText:"<select a row in the table below to view the upload logs>",logType:"summary"},_this.initHelper=_this.initHelper.bind(_this),_this.onLogTypeChange=_this.onLogTypeChange.bind(_this),_this.setServerPolling=_this.setServerPolling.bind(_this),_this.monitorProgress=_this.monitorProgress.bind(_this),_this}return _inherits(LogPanel,_React$Component),_createClass(LogPanel,[{key:"componentDidMount",value:function(){this.initHelper()}},{key:"initHelper",value:function(){var uploadProgress=new UploadProgress;this.uploadProgress=uploadProgress,$("#mri_upload_table").on("click","tbody tr",function(event){return null!==uploadProgress.getUploadRow()&&($(uploadProgress.getUploadRow()).css("background-color","white"),this.setServerPolling(!1)),event.currentTarget===uploadProgress.getUploadRow()?(uploadProgress.setUploadRow(null),uploadProgress.setProgressFromServer(null),void this.setState({logText:"<select a row in the table below to view the upload logs>"})):(uploadProgress.setUploadRow(event.currentTarget),$(event.currentTarget).css("background-color","#EFEFFB"),void this.monitorProgress(this.state.logType))}.bind(this))}},{key:"monitorProgress",value:function(logType){var summary="summary"===logType,uploadProgress=this.uploadProgress,uploadId=uploadProgress.getUploadId();uploadId&&$.post(loris.BaseURL+"/imaging_uploader/ajax/getUploadSummary.php",{uploadId:uploadId,summary:summary},function(data){uploadProgress.setProgressFromServer(data),this.setState({logText:uploadProgress.getProgressText()}),this.setServerPolling(uploadProgress.getPipelineStatus()===UploadProgress.PIPELINE_STATUS_RUNNING)}.bind(this))}},{key:"setServerPolling",value:function(poll){var uploadProgress=this.uploadProgress;poll?(this.setServerPolling.getSummaryInterval||(this.setServerPolling.getSummaryInterval=setInterval(this.monitorProgress,5e3)),this.setServerPolling.dotUpdateInterval||(this.setServerPolling.dotUpdateInterval=setInterval(function(){uploadProgress.updateDots(),this.setState({logText:uploadProgress.getProgressText()})},3e3)),this.setServerPolling.animatedCharInterval||(this.setServerPolling.animatedCharInterval=setInterval(function(){uploadProgress.updateAnimatedCharIndex(),this.setState({logText:uploadProgress.getProgressText()})},250))):(this.setServerPolling.getSummaryInterval&&(clearInterval(this.setServerPolling.getSummaryInterval),this.setServerPolling.getSummaryInterval=null),this.setServerPolling.dotUpdateInterval&&(clearInterval(this.setServerPolling.dotUpdateInterval),this.setServerPolling.dotUpdateInterval=null),this.setServerPolling.animatedCharInterval&&(clearInterval(this.setServerPolling.animatedCharInterval),this.setServerPolling.animatedCharInterval=null))}},{key:"onLogTypeChange",value:function(name,value){this.monitorProgress(value),this.setState({logType:value})}},{key:"render",value:function(){var logTypes={summary:"Summary",detailed:"Detailed"};return React.createElement(Panel,{id:"log_panel",title:"Log Viewer"},React.createElement(FormElement,{name:"log_form"},React.createElement(SelectElement,{name:"LogType",label:"Logs to display",options:logTypes,onUserInput:this.onLogTypeChange,value:this.state.logType,emptyOption:!1}),React.createElement(TextareaElement,{name:"UploadLogs",disabled:!0,id:"mri_upload_logs",value:this.state.logText,rows:6})))}}]),LogPanel}(React.Component);LogPanel.propTypes={},LogPanel.defaultProps={},exports.default=LogPanel},function(module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),UploadForm=function(_React$Component){function UploadForm(props){_classCallCheck(this,UploadForm);var _this=_possibleConstructorReturn(this,(UploadForm.__proto__||Object.getPrototypeOf(UploadForm)).call(this,props));return _this.state={formData:{},form:JSON.parse(JSON.stringify(_this.props.form)),uploadProgress:-1},_this.onFormChange=_this.onFormChange.bind(_this),_this.uploadFile=_this.uploadFile.bind(_this),_this}return _inherits(UploadForm,_React$Component),_createClass(UploadForm,[{key:"componentDidMount",value:function(){var form=this.state.form;form.IsPhantom.required=!0,this.onFormChange(form.IsPhantom.name,null)}},{key:"onFormChange",value:function(field,value){var form=JSON.parse(JSON.stringify(this.state.form)),formData=JSON.parse(JSON.stringify(this.state.formData));"IsPhantom"===field&&("N"===value?(form.candID.disabled=!1,form.pSCID.disabled=!1,form.visitLabel.disabled=!1):(form.candID.disabled=!0,form.pSCID.disabled=!0,form.visitLabel.disabled=!0,delete formData.candID,delete formData.pSCID,delete formData.visitLabel)),formData[field]=value,this.setState({form:form,formData:formData})}},{key:"uploadFile",value:function(){var formData=this.state.formData,formObj=new FormData;for(var key in formData)""!==formData[key]&&formObj.append(key,formData[key]);formObj.append("fire_away","Upload"),$.ajax({type:"POST",url:loris.BaseURL+"/imaging_uploader/",data:formObj,cache:!1,contentType:!1,processData:!1,xhr:function(){var xhr=new window.XMLHttpRequest;return xhr.upload.addEventListener("progress",function(evt){if(evt.lengthComputable){var percentage=Math.round(evt.loaded/evt.total*100);this.setState({uploadProgress:percentage})}}.bind(this),!1),xhr}.bind(this),success:function(data){var errMessage="The following errors occured while attempting to display this page:";data.indexOf(errMessage)>-1?(document.open(),document.write(data),document.close()):swal({title:"Upload Successful!",type:"success"},function(){window.location.assign(loris.BaseURL+"/imaging_uploader/")})},error:function(err){console.error(err),this.setState({uploadProgress:-1})}.bind(this)})}},{key:"render",value:function(){var form=this.state.form;form.IsPhantom.value=this.state.formData.IsPhantom,form.candID.value=this.state.formData.candID,form.pSCID.value=this.state.formData.pSCID,form.visitLabel.value=this.state.formData.visitLabel,form.mri_file.value=this.state.formData.mri_file;var btnClass=this.state.uploadProgress>-1?"btn btn-primary hide":void 0;return React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-7"},React.createElement("h3",null,"Upload an imaging scan"),React.createElement("br",null),React.createElement(FormElement,{name:"upload_form",formElements:form,fileUpload:!0,onUserInput:this.onFormChange},React.createElement(StaticElement,{label:"Notes",text:"File name should be of type .tgz or tar.gz or .zip"}),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-sm-9 col-sm-offset-3"},React.createElement(ProgressBar,{value:this.state.uploadProgress}))),React.createElement(ButtonElement,{onUserInput:this.uploadFile,buttonClass:btnClass}))))}}]),UploadForm}(React.Component);UploadForm.propTypes={},UploadForm.defaultProps={},exports.default=UploadForm},function(module,exports){"use strict";function formatColumn(column,cell,rowData,rowHeaders){function handleClick(dccid,e){loris.loadFilteredMenuClickHandler("imaging_browser/",{DCCID:dccid})(e)}if(loris.hiddenHeaders.indexOf(column)>-1)return null;var row={};rowHeaders.forEach(function(header,index){row[header]=rowData[index]},this);var cellStyle={whiteSpace:"nowrap"};if("Progress"===column){if("Failure"===cell)return cellStyle.color="#fff",React.createElement("td",{className:"label-danger",style:cellStyle},cell);if("In Progress..."===cell)return cellStyle.color="#fff",React.createElement("td",{className:"label-warning",style:cellStyle},cell);var created=row["Number Of MincCreated"],inserted=row["Number Of MincInserted"];return React.createElement("td",{style:cellStyle},cell," (",inserted," out of ",created,")")}if("Tarchive Info"===column){if(!cell||"0"===cell)return React.createElement("td",null);var url=loris.BaseURL+"/dicom_archive/viewDetails/?tarchiveID="+cell;return React.createElement("td",{style:cellStyle},React.createElement("a",{href:url},"View Details"))}return"Number Of MincInserted"===column&&cell>0?React.createElement("td",{style:cellStyle},React.createElement("a",{onClick:handleClick.bind(null,row.CandID)},cell)):React.createElement("td",{style:cellStyle},cell)}Object.defineProperty(exports,"__esModule",{value:!0}),loris.hiddenHeaders=[],exports.default=formatColumn}]);
//# sourceMappingURL=index.js.map