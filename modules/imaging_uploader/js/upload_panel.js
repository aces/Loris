!function(e){function t(r){if(a[r])return a[r].exports;var o=a[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var a={};return t.m=e,t.c=a,t.p="",t(0)}([function(e,t){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var n=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),i=function(e){function t(e){a(this,t);var o=r(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return o.state={formData:{},form:o.props.form},o.onFormChange=o.onFormChange.bind(o),o.uploadFile=o.uploadFile.bind(o),o}return o(t,e),n(t,[{key:"componentDidMount",value:function(){var e=this.state.form;e.IsPhantom.emptyOption=!1,this.setState({form:e})}},{key:"onFormChange",value:function(e,t){var a=this.state.form,r=this.state.formData;"IsPhantom"===e&&("Y"===t?(a.CandID.disabled=!0,a.PSCID.disabled=!0,a.Visit_label.disabled=!0):(a.CandID.disabled=!1,a.PSCID.disabled=!1,a.Visit_label.disabled=!1)),r[e]=t,this.setState({form:a,formData:r})}},{key:"uploadFile",value:function(){$("#file-input").hide(),$("#file-progress").removeClass("hide");var e=new FormData(this.state.formData);e.append("fire_away","Upload"),$.ajax({type:"POST",url:loris.BaseURL+"/imaging_uploader/",data:e,cache:!1,contentType:!1,processData:!1,xhr:function e(){var e=new window.XMLHttpRequest;return e.upload.addEventListener("progress",function(e){if(e.lengthComputable){var t=$("#progressbar"),a=$("#progresslabel"),r=Math.round(e.loaded/e.total*100);$(t).width(r+"%"),$(a).html(r+"%"),t.attr("aria-valuenow",r)}},!1),e},success:function(e){$("#file-progress").addClass("hide");var t={};this.setState({formData:t}),console.log(e)}.bind(this)})}},{key:"render",value:function(){return React.createElement(Panel,{id:"upload_panel",title:"Upload a new file"},React.createElement(FormElement,{name:"upload_form",formElements:this.state.form,onUserInput:this.onFormChange},React.createElement(StaticElement,{label:"Note",text:"File name should be of type .tgz or tar.gz or .zip"}),React.createElement(ButtonElement,{onUserInput:this.uploadFile}),React.createElement("div",{id:"file-progress",className:"col-sm-9 col-sm-offset-3 hide"},React.createElement("div",{className:"progress"},React.createElement("div",{id:"progressbar",className:"progress-bar progress-bar-striped active",role:"progressbar","aria-valuenow":"0","aria-valuemin":"0","aria-valuemax":"100"}),React.createElement("div",{id:"progresslabel"},"0%")))))}}]),t}(React.Component);i.propTypes={},i.defaultProps={}}]);
//# sourceMappingURL=upload_panel.js.map