!function(e){function n(a){if(r[a])return r[a].exports;var l=r[a]={exports:{},id:a,loaded:!1};return e[a].call(l.exports,l,l.exports,n),l.loaded=!0,l.exports}var r={};return n.m=e,n.c=r,n.p="",n(0)}({0:function(e,n,r){r(1)(r(30))},1:function(e,n){e.exports=function(e){"undefined"!=typeof execScript?execScript(e):eval.call(null,e)}},30:function(e,n){e.exports="/* exported formatColumn */\n\n/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  // If a column if set as hidden, don't display it\n  if (loris.hiddenHeaders.indexOf(column) > -1) {\n    return null;\n  }\n\n  // Create the mapping between rowHeaders and rowData in a row object.\n  var row = {};\n  rowHeaders.forEach(function (header, index) {\n    row[header] = rowData[index];\n  }, this);\n\n  if (column === 'New Data') {\n    if (cell === 'new') {\n      return React.createElement(\n        'td',\n        { className: 'newdata' },\n        'NEW'\n      );\n    }\n    return React.createElement('td', null);\n  }\n\n  if (column === 'Links') {\n    var cellTypes = cell.split(\",\");\n    var cellLinks = [];\n    for (var i = 0; i < cellTypes.length; i += 1) {\n      cellLinks.push(React.createElement(\n        'a',\n        { href: loris.BaseURL + \"/imaging_browser/viewSession/?sessionID=\" + row.SessionID + \"&outputType=\" + cellTypes[i] + \"&backURL=/imaging_browser/\" },\n        cellTypes[i]\n      ));\n      cellLinks.push(\" | \");\n    }\n    cellLinks.push(React.createElement(\n      'a',\n      { href: loris.BaseURL + \"/imaging_browser/viewSession/?sessionID=\" + row.SessionID + \"&selectedOnly=1&backURL=/imaging_browser/\" },\n      'selected'\n    ));\n\n    cellLinks.push(\" | \");\n    cellLinks.push(React.createElement(\n      'a',\n      { href: loris.BaseURL + \"/imaging_browser/viewSession/?sessionID=\" + row.SessionID + \"&backURL=/imaging_browser/\" },\n      'all types'\n    ));\n    return React.createElement(\n      'td',\n      null,\n      cellLinks\n    );\n  }\n\n  return React.createElement(\n    'td',\n    null,\n    cell\n  );\n}"}});