{
    "swagger": "2.0",
    "info": {
        "title": "LORIS API",
        "description": "This document specifies the LORIS REST API.",
        "version": "0.0.3"
    },
    "host": "localhost",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/api/v0.0.3",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/login": {
            "post": {
                "description": "Users can be be authenticated using JSON Web Tokens by sending a POST request with their username and password",
                "tags": [
                    "Login"
                ],
                "operationId": "Authentication",
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "description": "Request payload",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object with an authenticity token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "JWT token"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "description": "Return a list of the project names in this Loris instance",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "an array of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": [
                                "Project 1",
                                "Project 2"
                            ]
                        }
                    }
                }
            }
        },
        "/projects/{name}": {
            "get": {
                "description": "Return the project definition",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object whit the project informations",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                }
            }
        },
        "/projects/{name}/instruments": {
            "get": {
                "description": "Returns all the instruments used/installed in this project's test batteries",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object with that project's instruments informations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Instrument"
                            }
                        }
                    }
                }
            }
        },
        "/projects/{name}/instruments/{instrument}": {
            "get": {
                "description": "Returns JSON representation of that instrument",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instrument",
                        "in": "path",
                        "description": "The name of the instrument",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An JSON representation of that instrument ",
                        "schema": {
                            "$ref": "#/definitions/InstrumentForm"
                        }
                    }
                }
            }
        },
        "/projects/{name}/candidates": {
            "get": {
                "description": "Returns all the active candidates in this project",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of CandID ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/candidates": {
            "get": {
                "description": "Return a list of all active candidates of the study",
                "tags": [
                    "Candidate"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "an array of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Candidate"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "CandID": "300001",
                                    "PSCID": "MTL001",
                                    "Site": "MTL",
                                    "EDC": "2003-11-30",
                                    "DoB": "2003-10-31",
                                    "Gender": "Male",
                                    "Project": "Pumpernickel"
                                },
                                {
                                    "CandID": "300002",
                                    "PSCID": "MTL002",
                                    "Site": "MTL",
                                    "EDC": "2002-11-02",
                                    "DoB": "2002-10-02",
                                    "Gender": "Male",
                                    "Project": "Pumpernickel"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/candidates/{candid}": {
            "get": {
                "description": "Get a specific candidate object along with a list of its visit labels",
                "tags": [
                    "Candidate"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object representation of that candidate and an array of visit labels",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Meta": {
                                    "$ref": "#/definitions/Candidate"
                                },
                                "Visits": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}": {
            "get": {
                "description": "Get an object representation of the metadata for that candidate's visit.",
                "tags": [
                    "Candidate"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object representation of that candidate's visits",
                        "schema": {
                            "$ref": "#/definitions/VisitsData"
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}/instruments": {
            "get": {
                "description": "Get a list of the instruments that were administered for that candidate at that visit",
                "tags": [
                    "Candidate"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of instruments short_names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}/instruments/{instrument}": {
            "get": {
                "description": "Get a list of the instruments that were administered for that candidate at that visit",
                "tags": [
                    "Candidate"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instrument",
                        "in": "path",
                        "description": "The instrument short_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "And object representation of that candidate instrument's data",
                        "schema": {
                            "$ref": "#/definitions/InstrumentData"
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}/instruments/{instrument}/dde": {
            "get": {
                "description": "Get a list of the instruments that were administered for that candidate at that visit",
                "tags": [
                    "Candidate"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instrument",
                        "in": "path",
                        "description": "The instrument short_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "And object representation of that candidate instrument's data (Double Data Entry)",
                        "schema": {
                            "$ref": "#/definitions/InstrumentData"
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}/images": {
            "get": {
                "description": "Get a list of all the images which have been acquired for that visit",
                "tags": [
                    "Imaging"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of instruments short_names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImageFileDescription"
                            }
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}/qc/imaging": {
            "get": {
                "description": "Retrieve the session level imaging QC data for a visit",
                "tags": [
                    "Imaging"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The QC status",
                        "schema": {
                            "$ref": "#/definitions/qcStatus"
                        }
                    }
                }
            }
        },
        "/candidates/{candid}/{visit}/images/{filename}": {
            "get": {
                "description": "Get the raw file content with the appropriate MimeType",
                "tags": [
                    "Imaging"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "candid",
                        "in": "path",
                        "description": "The id of the candidate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visit",
                        "in": "path",
                        "description": "The visit_label of that candidate's visit",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "The file name of the image",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of instruments short_names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImageFileContent"
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "Project": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "useEDC": {
                    "type": "boolean"
                },
                "PSCID": {
                    "$ref": "#/definitions/PSCIDSettings"
                }
            }
        },
        "PSCIDSettings": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "description": "If the type is \"prompt\", the user should be prompted to enter the PSCID for new candidates. If the type is \"auto\", the server will automatically generate the PSCID",
                    "enum": [
                        "auto",
                        "prompt"
                    ]
                },
                "Regex": {
                    "type": "string",
                    "description": "A regular expression that can be used to validate a PSCID for this project"
                }
            }
        },
        "Instrument": {
            "type": "object",
            "properties": {
                "ShortName": {
                    "type": "string"
                },
                "FullName": {
                    "type": "string"
                },
                "Subgroup": {
                    "type": "string",
                    "description": "Subgroup name"
                },
                "DoubleDataEntryEnable": {
                    "type": "boolean",
                    "description": "Is double data entry enable for that instrument"
                }
            }
        },
        "InstrumentForm": {
            "type": "object",
            "properties": {
                "Meta": {
                    "type": "object",
                    "properties": {
                        "InstrumentVersion": {
                            "type": "string"
                        },
                        "InstrumentFormatVersion": {
                            "type": "string"
                        },
                        "ShortName": {
                            "type": "string"
                        },
                        "LongName": {
                            "type": "string"
                        },
                        "IncludeMetaDataFields": {
                            "type": "boolean"
                        }
                    }
                },
                "Elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormElement"
                    }
                }
            }
        },
        "FormElement": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Options": {
                    "type": "object",
                    "description": "A set key:value pairs that can be translated as HTML attributes for that element. "
                }
            }
        },
        "Candidate": {
            "type": "object",
            "properties": {
                "CandID": {
                    "type": "string"
                },
                "Project": {
                    "type": "string",
                    "description": "The name of the project that this candidate is from"
                },
                "PSCID": {
                    "type": "string"
                },
                "EDC": {
                    "type": "string",
                    "format": "date",
                    "description": "Estimated date of confinement"
                },
                "DoB": {
                    "type": "string",
                    "format": "date",
                    "description": "date of Birth"
                },
                "Gender": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                }
            }
        },
        "VisitsData": {
            "type": "object",
            "properties": {
                "Meta": {
                    "properties": {
                        "CandID": {
                            "type": "string"
                        },
                        "Visits": {
                            "type": "string"
                        },
                        "Battery": {
                            "type": "string",
                            "description": "Name of the cohort"
                        }
                    }
                },
                "Stages": {
                    "properties": {
                        "Screening": {
                            "$ref": "#/definitions/VisitSummary"
                        },
                        "Visit": {
                            "$ref": "#/definitions/VisitSummary"
                        },
                        "Approval": {
                            "$ref": "#/definitions/VisitSummary"
                        }
                    }
                }
            }
        },
        "VisitSummary": {
            "type": "object",
            "properties": {
                "Date": {
                    "type": "string",
                    "format": "date"
                },
                "Status": {
                    "enum": [
                        "Pass",
                        "Failure",
                        "Withdrawal",
                        "In Progress"
                    ]
                }
            }
        },
        "InstrumentData": {
            "type": "object",
            "description": "That instrument data entry progress and values",
            "properties": {
                "flags": {
                    "type": "object",
                    "description": "progress status of that instrument",
                    "properties": {
                        "Data_entry": {
                            "enum": [
                                "In Progress",
                                "complete"
                            ]
                        },
                        "Administration": {
                            "enum": [
                                "None",
                                "Partial",
                                "All"
                            ]
                        },
                        "Validity": {
                            "enum": [
                                "Questionnable",
                                "Invalid",
                                "valid"
                            ]
                        }
                    }
                },
                "data": {
                    "type": "object",
                    "description": "A set key:value pairs where the keys are the quetions and values are the answers."
                }
            }
        },
        "qcStatus": {
            "type": "object",
            "properties": {
                "SessionQC": {
                    "enum": [
                        "Pass",
                        "Fail"
                    ]
                },
                "Pending": {
                    "type": "boolean"
                }
            }
        },
        "ImageFileDescription": {
            "type": "object",
            "properties": {
                "OutputType": {
                    "type": "string"
                },
                "Filename": {
                    "type": "string"
                },
                "AcquisitionType": {
                    "type": "string"
                }
            }
        },
        "ImageFileContent": {
            "type": "string",
            "format": "byte"
        }
    }
}
