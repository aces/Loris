swagger: '2.0'
info:
  title: LORIS API
  description: This document specifies the Loris REST API.
  version: 0.0.3
host: localhost
schemes:
  - http
basePath: /api/v0.0.3
produces:
  - application/json
paths:
  /login:
    post:
      description: >-
        Users can be be authenticated using JSON Web Tokens by sending a POST
        request with their username and password
      tags:
        - Login
      operationId: Authentication
      parameters:
        - name: data
          required: true
          description: Request payload
          in: body
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
                format: password
      responses:
        '200':
          description: An object with an authenticity token
          schema:
            type: object
            properties:
              token:
                type: string
                description: JWT token
        '401':
          description: Unauthorized
  /projects:
    get:
      description: Return a list of the project names in this Loris instance
      tags:
        - Project
      security:
        - Bearer: []
      responses:
        '200':
          description: an array of projects
          schema:
            type: array
            items:
              type: string
          examples:
            application/json:
              - Project 1
              - Project 2
  '/projects/{name}':
    get:
      description: Return the project definition
      tags:
        - Project
      security:
        - Bearer: []
      parameters:
        - name: name
          in: path
          description: The name of the project
          required: true
          type: string
      responses:
        '200':
          description: An object whit the project informations
          schema:
            $ref: '#/definitions/Project'
  '/projects/{name}/instruments':
    get:
      description: >-
        Returns all the instruments used/installed in this project's test
        batteries
      tags:
        - Project
      security:
        - Bearer: []
      parameters:
        - name: name
          in: path
          description: The name of the project
          required: true
          type: string
      responses:
        '200':
          description: An object with that project's instruments informations
          schema:
            type: array
            items:
              $ref: '#/definitions/Instrument'
  '/projects/{name}/instruments/{instrument}':
    get:
      description: Returns JSON representation of that instrument
      tags:
        - Project
      security:
        - Bearer: []
      parameters:
        - name: name
          in: path
          description: The name of the project
          required: true
          type: string
        - name: instrument
          in: path
          description: The name of the instrument
          required: true
          type: string
      responses:
        '200':
          description: 'An JSON representation of that instrument '
          schema:
            type: array
            items:
              $ref: '#/definitions/InstrumentForm'
  '/projects/{name}/candidates':
    get:
      description: Returns all the active candidates in this project
      tags:
        - Project
      security:
        - Bearer: []
      parameters:
        - name: name
          in: path
          description: The name of the project
          required: true
          type: string
      responses:
        '200':
          description: 'A list of CandID '
          schema:
            type: array
            items:
              type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Project:
    type: object
    properties:
      name:
        type: string
      useEDC:
        type: boolean
      PSCID:
        $ref: '#/definitions/PSCIDSettings'
  PSCIDSettings:
    type: object
    properties:
      Type:
        type: string
        description: >-
          If the type is "prompt", the user should be prompted to enter the
          PSCID for new candidates. If the type is "auto", the server will
          automatically generate the PSCID
        enum:
          - auto
          - prompt
      Regex:
        type: string
        description: >-
          A regular expression that can be used to validate a PSCID for this
          project
  Instrument:
    type: object
    properties:
      ShortName:
        type: string
      FullName:
        type: string
      Subgroup:
        type: string
        description: Subgroup name
      DoubleDataEntryEnable:
        type: boolean
        description: Is double data entry enable for that instrument
  InstrumentForm:
    type: object
    properties:
      testName:
        type: string
