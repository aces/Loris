!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var CandidateInfo=React.createClass({displayName:"CandidateInfo",getInitialState:function(){return{caveatOptions:{true:"True",false:"False"},Data:[],formData:{},updateResult:null,errorMessage:null,isLoaded:!1,loadedData:0}},componentDidMount:function(){var that=this;$.ajax(this.props.dataURL,{dataType:"json",xhr:function xhr(){var xhr=new window.XMLHttpRequest;return xhr.addEventListener("progress",function(evt){that.setState({loadedData:evt.loaded})}),xhr},success:function(data){var formData={flaggedCaveatemptor:data.flagged_caveatemptor,flaggedOther:data.flagged_other,flaggedReason:data.flagged_reason};that.otherOption=null;var caveatReasonOptions=data.caveatReasonOptions;if(caveatReasonOptions)for(var reason in caveatReasonOptions)if("Other"===caveatReasonOptions[reason]){that.otherOption=reason;break}that.setState({Data:data,isLoaded:!0,formData:formData})},error:function(data,errorCode,errorMsg){that.setState({error:"An error occurred when loading the form!"})}})},setFormData:function(formElement,value){var formData=this.state.formData;formData[formElement]=value,"flaggedCaveatemptor"===formElement&&"false"===value&&(formData.flaggedReason="",formData.flaggedOther="",this.refs.flaggedReason.state.value="",this.refs.flaggedReason.state.hasError=!1,this.refs.flaggedOther.state.value=""),"flaggedReason"===formElement&&value!==this.otherOption&&(formData.flaggedOther="",this.refs.flaggedOther.state.value=""),this.setState({formData:formData})},onSubmit:function(e){e.preventDefault()},render:function(){if(!this.state.isLoaded)return void 0!==this.state.error?React.createElement("div",{className:"alert alert-danger text-center"},React.createElement("strong",null,this.state.error)):React.createElement("button",{className:"btn-info has-spinner"},"Loading",React.createElement("span",{className:"glyphicon glyphicon-refresh glyphicon-refresh-animate"}));var disabled=!0,updateButton=null;loris.userHasPermission("candidate_parameter_edit")&&(disabled=!1,updateButton=React.createElement(ButtonElement,{label:"Update"}));var reasonDisabled=!0,reasonRequired=!1;"true"===this.state.formData.flaggedCaveatemptor&&(reasonDisabled=!1,reasonRequired=!0);var reasonKey=null,specifyOther=null,otherDisabled=!0,otherRequired=!1;for(var key in this.state.Data.caveatReasonOptions)if(this.state.Data.caveatReasonOptions.hasOwnProperty(key)&&"Other"===this.state.Data.caveatReasonOptions[key]){reasonKey=key;break}this.state.formData.flaggedReason===reasonKey&&(otherRequired=!0,otherDisabled=!1),"false"===this.state.formData.flaggedCaveatemptor&&(reasonDisabled=!0,reasonRequired=!1,otherDisabled=!0,otherRequired=!1),null!==reasonKey&&(specifyOther=React.createElement(TextareaElement,{label:"If Other, please specify",name:"flaggedOther",value:this.state.formData.flaggedOther,onUserInput:this.setFormData,ref:"flaggedOther",disabled:otherDisabled,required:otherRequired}));var extraParameterFields=[],extraParameters=this.state.Data.extra_parameters;for(var key2 in extraParameters)if(extraParameters.hasOwnProperty(key2)){var paramTypeID=extraParameters[key2].ParameterTypeID,name="PTID"+paramTypeID,value=this.state.Data.parameter_values[paramTypeID];switch(extraParameters[key2].Type.substring(0,3)){case"enu":var types=extraParameters[key2].Type.substring(5);types=types.slice(0,-1),types=types.replace(/'/g,""),types=types.split(",");var selectOptions=[];for(var key3 in types)types.hasOwnProperty(key3)&&(selectOptions[types[key3]]=types[key3]);extraParameterFields.push(React.createElement(SelectElement,{label:extraParameters[key2].Description,name:name,options:selectOptions,value:value,onUserInput:this.setFormData,ref:name,disabled:disabled}));break;case"dat":extraParameterFields.push(React.createElement(DateElement,{label:extraParameters[key2].Description,name:name,value:value,onUserInput:this.setFormData,ref:name,disabled:disabled}));break;default:extraParameterFields.push(React.createElement(TextareaElement,{label:extraParameters[key2].Description,name:name,value:value,onUserInput:this.setFormData,ref:name,disabled:disabled}))}}var alertMessage="",alertClass="alert text-center hide";if(this.state.updateResult)if("success"===this.state.updateResult)alertClass="alert alert-success text-center",alertMessage="Update Successful!";else if("error"===this.state.updateResult){var errorMessage=this.state.errorMessage;alertClass="alert alert-danger text-center",alertMessage=errorMessage?errorMessage:"Failed to update!"}return React.createElement("div",{class:"row"},React.createElement("div",{className:alertClass,role:"alert",ref:"alert-message"},alertMessage),React.createElement(FormElement,{name:"candidateInfo",onSubmit:this.handleSubmit,ref:"form",class:"col-md-6"},React.createElement(StaticElement,{label:"PSCID",text:this.state.Data.pscid}),React.createElement(StaticElement,{label:"DCCID",text:this.state.Data.candID}),React.createElement(SelectElement,{label:"Caveat Emptor Flag for Candidate",name:"flaggedCaveatemptor",options:this.state.caveatOptions,value:this.state.formData.flaggedCaveatemptor,onUserInput:this.setFormData,ref:"flaggedCaveatemptor",disabled:disabled,required:!0}),React.createElement(SelectElement,{label:"Reason for Caveat Emptor Flag",name:"flaggedReason",options:this.state.Data.caveatReasonOptions,value:this.state.formData.flaggedReason,onUserInput:this.setFormData,ref:"flaggedReason",disabled:reasonDisabled,required:reasonRequired}),specifyOther,extraParameterFields,updateButton))},handleSubmit:function(e){e.preventDefault();var myFormData=this.state.formData,self=this,formData=new FormData;for(var key in myFormData)myFormData.hasOwnProperty(key)&&""!==myFormData[key]&&formData.append(key,myFormData[key]);formData.append("tab",this.props.tabName),formData.append("candID",this.state.Data.candID),$.ajax({type:"POST",url:self.props.action,data:formData,cache:!1,contentType:!1,processData:!1,success:function(data){self.setState({updateResult:"success"}),self.showAlertMessage()},error:function(err){if(""!==err.responseText){var errorMessage=JSON.parse(err.responseText).message;self.setState({updateResult:"error",errorMessage:errorMessage}),self.showAlertMessage()}}})},showAlertMessage:function(){var self=this;if(null!==this.refs["alert-message"]){var alertMsg=this.refs["alert-message"];$(alertMsg).fadeTo(2e3,500).delay(3e3).slideUp(500,function(){self.setState({updateResult:null})})}}}),RCandidateInfo=React.createFactory(CandidateInfo);window.CandidateInfo=CandidateInfo,window.RCandidateInfo=RCandidateInfo,exports.default=CandidateInfo}]);
//# sourceMappingURL=candidateInfo.js.map