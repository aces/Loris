!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ProbandInfo=React.createClass({displayName:"ProbandInfo",getInitialState:function(){return{genderOptions:{Male:"Male",Female:"Female"},Data:[],formData:{},updateResult:null,errorMessage:null,isLoaded:!1,loadedData:0}},componentDidMount:function(){var that=this;$.ajax(this.props.dataURL,{dataType:"json",xhr:function xhr(){var xhr=new window.XMLHttpRequest;return xhr.addEventListener("progress",function(evt){that.setState({loadedData:evt.loaded})}),xhr},success:function(data){var formData={ProbandGender:data.ProbandGender,ProbandDoB:data.ProbandDoB,ProbandDoB2:data.ProbandDoB};that.setState({formData:formData,Data:data,isLoaded:!0})},error:function(data,errorCode,errorMsg){that.setState({error:"An error occurred when loading the form!"})}})},setFormData:function(formElement,value){var formData=this.state.formData;formData[formElement]=value,this.setState({formData:formData})},onSubmit:function(e){e.preventDefault()},render:function(){if(!this.state.isLoaded)return void 0!==this.state.error?React.createElement("div",{className:"alert alert-danger text-center"},React.createElement("strong",null,this.state.error)):React.createElement("button",{className:"btn-info has-spinner"},"Loading",React.createElement("span",{className:"glyphicon glyphicon-refresh glyphicon-refresh-animate"}));var disabled=!0,updateButton=null;loris.userHasPermission("candidate_parameter_edit")&&(disabled=!1,updateButton=React.createElement(ButtonElement,{label:"Update"}));var dobRequired=!1,dob2Required=!1;null!==this.state.formData.ProbandGender&&(dobRequired=!0),null!==this.state.formData.ProbandDoB&&(dob2Required=!0);var alertMessage="",alertClass="alert text-center hide";if(this.state.updateResult)if("success"===this.state.updateResult)alertClass="alert alert-success text-center",alertMessage="Update Successful!";else if("error"===this.state.updateResult){var errorMessage=this.state.errorMessage;alertClass="alert alert-danger text-center",alertMessage=errorMessage?errorMessage:"Failed to update!"}return React.createElement("div",{class:"row"},React.createElement("div",{className:alertClass,role:"alert",ref:"alert-message"},alertMessage),React.createElement(FormElement,{name:"probandInfo",onSubmit:this.handleSubmit,ref:"form",class:"col-md-6"},React.createElement(StaticElement,{label:"PSCID",text:this.state.Data.pscid}),React.createElement(StaticElement,{label:"DCCID",text:this.state.Data.candID}),React.createElement(SelectElement,{label:"Proband Gender",name:"ProbandGender",options:this.state.genderOptions,value:this.state.Data.ProbandGender,onUserInput:this.setFormData,ref:"ProbandGender",disabled:disabled,required:!0}),React.createElement(DateElement,{label:"DoB Proband",name:"ProbandDoB",value:this.state.Data.ProbandDoB,onUserInput:this.setFormData,ref:"ProbandDoB",disabled:disabled,required:dobRequired}),React.createElement(DateElement,{label:"Confirm DoB Proband",name:"ProbandDoB2",value:this.state.Data.ProbandDoB,onUserInput:this.setFormData,ref:"ProbandDoB2",disabled:disabled,required:dob2Required}),React.createElement(StaticElement,{label:"Age Difference (months)",text:this.state.Data.ageDifference}),updateButton))},handleSubmit:function(e){e.preventDefault();var myFormData=this.state.formData,today=new Date,dd=today.getDate(),mm=today.getMonth()+1,yyyy=today.getFullYear();dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm),today=yyyy+"-"+mm+"-"+dd;var dob1=myFormData.ProbandDoB?myFormData.ProbandDoB:null,dob2=myFormData.ProbandDoB2?myFormData.ProbandDoB2:null;if(dob1!==dob2)return void alert("DOB do not match!");if(dob1>today)return void alert("Consent to study date cannot be later than today!");var self=this,formData=new FormData;for(var key in myFormData)""!==myFormData[key]&&formData.append(key,myFormData[key]);formData.append("tab",this.props.tabName),formData.append("candID",this.state.Data.candID),$.ajax({type:"POST",url:self.props.action,data:formData,cache:!1,contentType:!1,processData:!1,success:function(data){self.setState({updateResult:"success"}),self.showAlertMessage()},error:function(err){if(""!==err.responseText){var errorMessage=JSON.parse(err.responseText).message;self.setState({updateResult:"error",errorMessage:errorMessage}),self.showAlertMessage()}}})},showAlertMessage:function(){var self=this;if(null!==this.refs["alert-message"]){var alertMsg=this.refs["alert-message"];$(alertMsg).fadeTo(2e3,500).delay(3e3).slideUp(500,function(){self.setState({updateResult:null})})}}}),RProbandInfo=React.createFactory(ProbandInfo);window.ProbandInfo=ProbandInfo,window.RProbandInfo=RProbandInfo,exports.default=ProbandInfo}]);
//# sourceMappingURL=probandInfo.js.map