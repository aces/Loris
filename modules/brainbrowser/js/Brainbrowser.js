(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=63)})({63:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var BrainBrowser=React.createClass({displayName:"BrainBrowser",getInitialState:function getInitialState(){return{defaultPanelSize:300}},componentDidMount:function componentDidMount(){var modulePrefs=JSON.parse(localStorage.getItem("modulePrefs"));if(!modulePrefs){modulePrefs={}}if(!modulePrefs[loris.TestName]){modulePrefs[loris.TestName]={};modulePrefs[loris.TestName].panelSize=this.state.defaultPanelSize}var panelSize=modulePrefs[loris.TestName].panelSize;this.setState({panelSize});this.modulePrefs=modulePrefs},handleChange:function handleChange(e){var panelSize=e.target.value||this.state.defaultPanelSize;this.modulePrefs[loris.TestName].panelSize=panelSize;localStorage.setItem("modulePrefs",JSON.stringify(this.modulePrefs));this.setState({panelSize})},render:function render(){var options={100:"100 Pixels",200:"200 Pixels",256:"256 Pixels",300:"300 Pixels (Default)",400:"400 Pixels",500:"500 Pixels",600:"600 Pixels",700:"700 Pixels",800:"800 Pixels",900:"900 Pixels",1000:"1000 Pixels"};return React.createElement("div",null,React.createElement("div",{id:"brainbrowser-wrapper",className:"brainbrowser-wrapper"},React.createElement("div",{id:"global-controls",className:"global-controls"},React.createElement("button",{id:"sync-volumes",className:"control"},"Sync Volumes"),React.createElement("button",{id:"reset-view",className:"control"},"Reset View"),React.createElement("select",{id:"panel-size",className:"control",value:this.state.panelSize,onChange:this.handleChange},React.createElement("option",{value:"-1"},"Auto"),Object.keys(options).map(function(option){return React.createElement("option",{value:option,key:option},options[option])})))),React.createElement("div",{id:"brainbrowser",className:"brainbrowser"}),React.createElement("div",{id:"loading",className:"loading-message"},"Loading..."))}});var RBrainBrowser=React.createFactory(BrainBrowser);window.BrainBrowser=BrainBrowser;window.RBrainBrowser=RBrainBrowser;exports.default=BrainBrowser}});
//# sourceMappingURL=Brainbrowser.js.map