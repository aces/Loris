uniform mat4 world;
uniform mat4 view;
uniform mat4 projection;
uniform float isovalue;

attribute vec4 position;
attribute vec4 color;


varying vec4 v_color;
varying vec4 v_position;
varying float v_isovalue;

void main() {
  gl_PointSize = 2.0;
  v_position = projection * view * world * position;
  gl_Position = v_position;
  v_color = color;
  v_isovalue = isovalue;
}

// #o3d SplitMarker


#ifdef GL_ES
precision highp float;
#endif    

varying vec4 v_color;
varying vec4 v_position;
varying float v_isovalue;
void main() {
     if(v_color[1] < v_isovalue) {
       discard;
    }else{
      gl_FragColor = v_color;
    }
}

