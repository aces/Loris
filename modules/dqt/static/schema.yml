openapi: 3.0.1
info:
  title: LORIS - REST API endpoints
  description: The LORIS API uses standard HTTP error codes and the body of any response will either be empty or contain only a JSON object for any request.
  contact:
    name: LORIS Development Team
    url: 'https://github.com/aces/loris'
  license:
    name: 'GNU Public License, Version 3'
    url: 'https://opensource.org/licenses/GPL-3.0'
  version: 0.0.3-dev
servers:
  - url: /api/v0.0.3-dev
paths:
 
  /dqt/queries:
    get:
      description: List available queries
      responses:
        '200':
          description: All the queries in 3 lists ; History, Saved, Shared
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queries'
    post:
      description: Saves the current query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '204': 
          description: The query has been added to the saved queries
        '403':
          description: The query can't be saved because of insuficient user permission or the query has already been saved. 
  
  '/dqt/queries/{queryId}': 
    patch:
      description: Change the name of, or un/share a query
      parameters:
        - in: path
          name: queryId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedQuery'
      responses:
        '204':
          description: Query updated
        
    delete:
      description: 
        Remove a query from the shared and saved queries.<br>
        *The query might still be showned in the query  history.*  
      parameters:
        - in: path
          name: queryId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Query removed
          
  /dqt/results/{hash}/{revision}:
    get:
      description: Download the results
      parameters:
        - in: path
          name: hash
          schema:
            type: string
          required: true
        - in: path
          name: revision
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: The results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsJSON'
            application/gzip:
              schema:
                type: string
                format: binary
    post:
      description: Copy results to other location
      parameters:
      - in: path
        name: hash
        schema:
          type: string
        required: true
      - in: path
        name: revision
        schema:
          type: integer
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination:
                 type: string
      responses:
        '204':
          description: File moved successfully
  /dqt/search:
    post:
      description: Execute the query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '201':
          description: Results created
          headers:
            Location:
              schema:
                type: string
              description: Created results url
                 
components:
  schemas:
    Queries:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/Query'
        saved:
          type: array
          items:
            $ref: '#/components/schemas/SavedQuery'
        shared:
          type: array
          items:
            $ref: '#/components/schemas/SavedQuery'
    
    SavedQuery:
      type: object
      required:
        - name
        - shared
      properties:
        id:
          type: integer
        name:
          type: string
        shared:
          type: boolean
        creatorUsername:
          type: string
          description: This value will be ignored in POST and PATCH requests.
        creationTimestamp: 
          type: string
          description: This value will be ignored in POST and PATCH requests.
        query:
          $ref: '#/components/schemas/Query'
    
    Query:
      type: object
      required:
        - fields
        - filters
      properties:
        fields:
          $ref: '#/components/schemas/Fields'
        filters:
          $ref: '#/components/schemas/Filters'
          
    Fields:
      anyOf:
        - $ref: '#/components/schemas/Field'
        
    Field:
      type: object
      required:
        - category
        - field
      properties:
        category:
          type: string
        field:
          type: string
        visits:
          type: array
          items:
            type: string
      
    Filters:
      oneOf:
        - $ref: '#/components/schemas/Group'
        - $ref: '#/components/schemas/Filter'
      discriminator:
        propertyName: type
  
    Group:
      type: object
      required:
        - type
        - operator
        - items
      properties:
        type:
          type: string
          enum:
            - 'group'
        operator:
          type: string
          enum:
            - 'AND'
            - 'OR'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Filters'

      example:
        ex1: 
          type: 'group'
          operator: 'AND'
          items:
            - type: object
              operator: 'equals'
              category: 'demographics'
              field: 'Sex'
              value: 'Female'
            - type: object
              properties:
                type: 'group'
                operator: 'OR'
                items:
                  - type: object
                    operator: 'equals'
                    category: 'demographics'
                    field: 'DoB'
                    value: '1936-09-15'
                  - type: object
                    operator: 'equals'
                    category: 'demographics'
                    field: 'DoB'
                    value: '1936-10-15'
                  - type: object
                    operator: 'equals'
                    category: 'demographics'
                    field: 'DoB'
                    value: '1936-11-15'
            
    Filter:
      type: object
      required:
        - type
        - operator
        - category
        - field
      properties:
        type:
          type: string
          enum:
            - 'filter'
        operator:
          type: string
          enum:
            - 'equal'
            - 'notEqual'
            - 'lessThanEqual'
            - 'greaterThanEqual'
            - 'startsWith'
            - 'contains'
            - 'isNull'
            - 'isNotNull'
        category:
          type: string
        field:
          type: string
        value:
          type: string
      
    ResultsJSON:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/Query'
        revision:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResultRow'
        
    ResultRow:
      type: object
      properties:
        key:
          type: array
          items:
            type: string
        doc:
          type: object
        
      
    Error:
      type: object
      properties:
        error:
          description: The error message
          type: string
      required:
        - error
        
    
  responses:
    InternalServerError:
      description: 500 Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
security:
  - ApiKeyAuth: []

