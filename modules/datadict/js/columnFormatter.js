!function(n){function e(a){if(t[a])return t[a].exports;var r=t[a]={exports:{},id:a,loaded:!1};return n[a].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var t={};return e.m=n,e.c=t,e.p="",e(0)}({0:function(n,e,t){t(1)(t(19))},1:function(n,e){n.exports=function(n){"undefined"!=typeof execScript?execScript(n):eval.call(null,n)}},19:function(n,e){n.exports='/* exported formatDataDictColumn */\n\n/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @return {*} a formated table cell for a given column\n */\nfunction formatDataDictColumn(column, cell, rowData) {\n  if (column === \'Description\') {\n    var updateDict = function updateDict(name) {\n      return function (e) {\n        e.stopPropagation();\n\n        var value = e.target.valueOf().innerText;\n        $.post(loris.BaseURL + "/datadict/ajax/UpdateDataDict.php", {\n          fieldname: name, description: value\n        }, function (data) {});\n      };\n    };\n    return React.createElement(\n      "td",\n      {\n        contentEditable: "true",\n        className: "description",\n        onBlur: updateDict(rowData[1]) },\n      cell\n    );\n  }\n  return React.createElement(\n    "td",\n    null,\n    cell\n  );\n}'}});