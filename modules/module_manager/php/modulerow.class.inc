<?php declare(strict_types=1);
/**
 * This class implements a data Instance which represents a single
 * module in the module_manager menu table.
 *
 * PHP Version 7
 *
 * @category   Core
 * @package    Main
 * @subpackage Core
 * @author     Dave MacFarlane <david.macfarlane2@mcgill.ca>
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 * @link       https://www.github.com/aces/Loris/
 */

namespace LORIS\module_manager;

/**
 * A ModuleRow represents a row in the module_manager menu table.
 *
 * The module_manager requires a specific "row" concept because
 * the \Module class does not have any concept of the Active flag
 * for the module in order to serialize it as JSON for the data
 * table.
 *
 * @category   Core
 * @package    Main
 * @subpackage Core
 * @author     Dave MacFarlane <david.macfarlane2@mcgill.ca>
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 * @link       https://www.github.com/aces/Loris/
 */
class ModuleRow implements \LORIS\Data\DataInstance
{
    protected $Module;
    protected $DBRow;
    protected $Active;
    protected $lorisinstance;

    /**
     * Create a new ModuleRow Instance.
     *
     * @param \LORIS\LorisInstance $loris The LORIS instance with the module
     * @param array                $row   The ModuleRow Instance
     */
    public function __construct(\LORIS\LorisInstance $loris, array $row)
    {
        $this->lorisinstance = $loris;
        $this->Module        = \Module::factory($loris, $row['name']);
        $this->Active        = $row['active'];
    }

    /**
     * Implements \LORIS\Data\DataInstance interface for this row.
     *
     * @return array which can be serialized by json_encode()
     */
    public function jsonSerialize() : array
    {
        return [
            'Name'     => $this->Module->getName(),
            'LongName' => $this->Module->getLongName(),
            'Active'   => $this->Active,
        ];
    }

}
