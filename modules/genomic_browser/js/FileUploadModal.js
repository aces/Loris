(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=44)})({44:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var GenomicFileUploadModal=React.createClass({displayName:"GenomicFileUploadModal",propTypes:{baseURL:React.PropTypes.string.isRequired},getInitialState:function getInitialState(){return{readyForUpload:false,submited:false,uploadSummary:{}}},shouldComponentUpdate:function shouldComponentUpdate(nextProps,nextState){return nextState.readyForUpload!==this.state.readyForUpload||nextState.submited!==this.state.submited||nextProps.id!==this.props.id},validateForm:function validateForm(requiredInputs){requiredInputs=requiredInputs||[];this.setState({readyForUpload:requiredInputs.reduce(function(previousValue,currentValue,currentIndex,array){return previousValue},true)})},reloadPage:function reloadPage(){$("#modalContainer").modal("hide");$("#showdata").click()},handleUploadSubmit:function handleUploadSubmit(event){event.preventDefault();var self=this;var formData=new FormData(document.getElementById("uploadForm"));var xhr=new XMLHttpRequest;xhr.previousText="";xhr.onerror=function(){console.error("[XHR] Fatal Error.")};xhr.onreadystatechange=function(){var bar=document.getElementById("progressBar");try{switch(xhr.readyState){case 0:break;case 1:break;case 2:break;case 3:var newResponse=xhr.responseText.substring(xhr.previousText.length);var result=JSON.parse(newResponse);bar.innerHTML=String(result.message);bar.style.width=result.progress+"%";if(result.error!==undefined){bar.className="progress-bar progress-bar-danger"}xhr.previousText=xhr.responseText;break;case 4:self.setState({submited:true});break;default:break}}catch(e){console.error("[XHR STATECHANGE] Exception: "+e);bar.innerHTML="An error occurred";bar.className="progress-bcar progress-bar-danger";bar.style.width="100%"}};var url=this.props.baseURL+"/genomic_browser/ajax/genomic_file_upload.php";xhr.open("POST",url,true);xhr.send(formData)},render:function render(){var footerButtons=[];if(this.state.submited){footerButtons.push(React.createElement("button",{key:"submited",className:"btn btn-default",onClick:this.reloadPage,"data-dismiss":"modal"},"Ok"))}else{if(this.state.readyForUpload){footerButtons.push(React.createElement("button",{key:"readyForUpload",className:"btn btn-primary",onClick:this.handleUploadSubmit,role:"button","aria-disabled":"false"},"Upload"))}footerButtons.push(React.createElement("button",{key:"cancel",className:"btn btn-default",id:"cancelButton",role:"reset",type:"reset","data-dismiss":"modal"},"Cancel"))}return React.createElement("div",{className:"modal fade",id:"fileUploadModal",tabIndex:"-1",role:"dialog","aria-labelledby":"myModalLabel","aria-hidden":"true"},React.createElement("div",{className:"modal-dialog"},React.createElement("div",{className:"modal-content"},React.createElement("div",{className:"modal-header"},React.createElement("button",{type:"button",className:"close","data-dismiss":"modal"},React.createElement("span",{"aria-hidden":"true"},"Ã—"),React.createElement("span",{className:"sr-only"},"Close")),React.createElement("h3",{className:"modal-title",id:"myModalLabel"},"Upload File")),React.createElement("div",{className:"modal-body"},React.createElement(UploadForm,{baseURL:this.props.baseURL,validate:this.validateForm})),React.createElement("div",{className:"modal-footer"},footerButtons))))}});var RGenomicFileUploadModal=React.createFactory(GenomicFileUploadModal);var UploadForm=React.createClass({displayName:"UploadForm",getInitialState:function getInitialState(){return{baseURL:"",fileType:"",useColumnHeaders:true}},getDefaultProps:function getDefaultProps(){return{validate:null}},handleFileTypeChange:function handleFileTypeChange(event){event.preventDefault();this.setState({fileType:event.target.value})},handleCheckboxChange:function handleCheckboxChange(event){if(event.target.name==="pscidColumn"){this.setState({useColumnHeaders:!this.state.useColumnHeaders})}},componentWillUpdate:function componentWillUpdate(prevProps,prevState){this.props.validate()},render:function render(){var instructions=[];var inputs=[];inputs.push(React.createElement(FileTypeSelect,{key:"fileType",baseURL:this.props.baseURL,multiple:false,onFileTypeChange:this.handleFileTypeChange,name:"fileType",label:"File type:"}));switch(this.state.fileType){case"Methylation beta-values":inputs.push(React.createElement(FileInput,{key:"fileData",name:"fileData",label:"File :"}));inputs.push(React.createElement(TextAreaInput,{key:"description",name:"description",label:"Description :"}));if(!this.state.useColumnHeaders){inputs.push(React.createElement(FileInput,{key:"fileMapping",name:"fileMapping",label:"Mapping :"}))}inputs.push(React.createElement(CheckboxInput,{key:"pscidColumn",handleChange:this.handleCheckboxChange,checked:this.state.useColumnHeaders,name:"pscidColumn"}));inputs.push(React.createElement(ProgressBar,{key:"progressbar",name:"progressbar",label:"Progress :"}));break;case"Other":inputs.push(React.createElement(FileInput,{key:"fileData",name:"fileData",label:"File :"}));inputs.push(React.createElement(TextAreaInput,{key:"description",name:"description",label:"Description :"}));inputs.push(React.createElement(ProgressBar,{key:"progressbar",name:"progressbar",label:"Progress :"}));break;default:}return React.createElement("form",{name:"uploadForm",id:"uploadForm",encType:"multipart/form-data",method:"POST"},React.createElement("div",{className:"row"},instructions,inputs))}});var FileTypeSelect=React.createClass({displayName:"FileTypeSelect",getDefaultProps:function getDefaultProps(){return{baseURL:"",onFileTypeChange:null,getFileType:null}},getInitialState:function getInitialState(){return{availableFileType:[]}},componentDidMount:function componentDidMount(){this.getGenomicFileType()},getGenomicFileType:function getGenomicFileType(){var self=this;var xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){try{switch(xhr.readyState){case 0:break;case 1:break;case 2:break;case 3:xhr.previousText=xhr.responseText;break;case 4:var fileType=[{genomicFileType:""}].concat(JSON.parse(xhr.responseText));self.setState({availableFileType:fileType});break;default:break}}catch(e){console.error("Exception: "+e)}};var url=this.props.baseURL+"/AjaxHelper.php?Module=genomic_browser&script=get_genomic_file_type.php";xhr.open("POST",url,true);xhr.send()},render:function render(){var options=this.state.availableFileType.map(function(e){return React.createElement("option",{key:e.genomicFileType,value:e.genomicFileType},e.genomicFileType)});return React.createElement("div",{className:"col-xs-12 form-group"},React.createElement("label",{htmlFor:this.props.name,className:"col-xs-3"},this.props.label,React.createElement("font",{color:"red"},React.createElement("sup",null," *"))),React.createElement("div",{className:"col-xs-9"},React.createElement("select",{name:this.props.name,id:this.props.name,className:"form-fields form-control input-sm",onChange:this.props.onFileTypeChange},options)))}});var FileInput=React.createClass({displayName:"FileInput",propTypes:{name:React.PropTypes.string,label:React.PropTypes.string},render:function render(){return React.createElement("div",{className:"col-xs-12 form-group"},React.createElement("label",{className:"col-xs-3",htmlFor:this.props.name},this.props.label),React.createElement("div",{className:"col-xs-9"},React.createElement("input",{type:"file",name:this.props.name,id:this.props.name,onChange:this.handleChange,className:"fileUpload"})))}});var TextAreaInput=React.createClass({displayName:"TextAreaInput",propTypes:{name:React.PropTypes.string,label:React.PropTypes.string},render:function render(){return React.createElement("div",{className:"col-xs-12 form-group"},React.createElement("label",{className:"col-xs-3",htmlFor:this.props.name},this.props.label),React.createElement("div",{className:"col-xs-9"},React.createElement("textarea",{cols:"20",rows:"3",name:this.props.name,onChange:this.handleChange,id:this.props.name,style:{border:"2px inset"},className:"ui-corner-all form-fields form-control input-sm"})))}});var CheckboxInput=React.createClass({displayName:"CheckboxInput",propTypes:{name:React.PropTypes.string},getInitialState:function getInitialState(){return{checked:this.props.checked||false}},render:function render(){return React.createElement("div",{className:"form-group col-sm-12"},React.createElement("label",{className:"col-xs-3"}),React.createElement("div",{className:"col-xs-9"},React.createElement("input",{className:"user-success",name:this.props.name,id:this.props.name,type:"checkbox",defaultChecked:"true",style:{marginRight:"1em"}}),"Use PSCID in column headers",this.props.label))}});var ProgressBar=React.createClass({displayName:"ProgressBar",propTypes:{name:React.PropTypes.string,label:React.PropTypes.string},render:function render(){return React.createElement("div",{className:"col-xs-12 form-group"},React.createElement("label",{className:"col-xs-3",htmlFor:this.props.name},this.props.label),React.createElement("div",{className:"col-xs-9"},React.createElement("div",{className:"progress",style:{height:"20px"}},React.createElement("div",{className:"progress-bar progress-bar-success",id:"progressBar",role:"progressbar","aria-valuenow":"0","aria-valuemin":"0","aria-valuemax":"100"}))))}});window.GenomicFileUploadModal=GenomicFileUploadModal;window.RGenomicFileUploadModal=RGenomicFileUploadModal;window.UploadForm=UploadForm;window.FileTypeSelect=FileTypeSelect;window.FileInput=FileInput;window.TextAreaInput=TextAreaInput;window.CheckboxInput=CheckboxInput;window.ProgressBar=ProgressBar;exports.default={GenomicFileUploadModal,RGenomicFileUploadModal,UploadForm,FileTypeSelect,FileInput,TextAreaInput,CheckboxInput,ProgressBar}}});
//# sourceMappingURL=FileUploadModal.js.map