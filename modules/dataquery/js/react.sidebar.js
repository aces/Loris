!function(e){function n(i){if(t[i])return t[i].exports;var r=t[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}({0:function(e,n,t){t(1)(t(24))},1:function(e,n){e.exports=function(e){"undefined"!=typeof execScript?execScript(e):eval.call(null,e)}},24:function(e,n){e.exports="Sidebar = React.createClass({\n    displayName: 'Sidebar',\n\n    getInitialState: function getInitialState() {\n        return {\n            'hidden': false\n        };\n    },\n    toggleHidden: function toggleHidden() {\n        this.setState({ 'hidden': !this.state.hidden });\n    },\n    hide: function hide() {\n        this.setState({ 'hidden': true });\n    },\n    show: function show() {\n        this.setState({ 'hidden': false });\n    },\n    render: function render() {\n        if (this.state.hidden) {\n            return React.createElement('div', null);\n        }\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(\n                'h2',\n                null,\n                this.props.Name\n            ),\n            this.props.children\n        );\n    }\n});\nFieldsSidebar = React.createClass({\n    displayName: 'FieldsSidebar',\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            Fields: [],\n            Criteria: {}\n        };\n    },\n    render: function render() {\n        if ((!this.props.Fields || this.props.Fields.length === 0) && (!this.props.Criteria || Object.keys(this.props.Criteria).length === 0)) {\n            return React.createElement('div', null);\n        }\n\n        var fieldDiv = '';\n        var fieldList = [];\n        if (this.props.Fields) {\n            for (var i = this.props.Fields.length - 1; i >= 0; i--) {\n                var fieldInfo = this.props.Fields[i].split(\",\");\n                fieldList.push(React.createElement(\n                    'div',\n                    { className: 'list-group-item row', key: this.props.Fields[i] },\n                    React.createElement(\n                        'h4',\n                        { className: 'list-group-item-heading col-xs-12' },\n                        fieldInfo[0]\n                    ),\n                    React.createElement(\n                        'span',\n                        { className: 'col-xs-12' },\n                        fieldInfo[1]\n                    )\n                ));\n            }\n        }\n        return React.createElement(\n            Sidebar,\n            { Name: 'Fields' },\n            React.createElement(\n                'div',\n                { className: 'form-group' },\n                React.createElement(\n                    'button',\n                    { className: 'btn btn-primary', onClick: this.props.resetQuery },\n                    'Clear Query'\n                )\n            ),\n            fieldList\n        );\n    }\n});"}});