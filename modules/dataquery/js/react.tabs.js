!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});/**
	 *  The following file contains the components used for displaying the tab content
	 *
	 *  @author   Dave MacFarlane <david.macfarlane2@mcgill.ca>
	 *  @author   Jordan Stirling <jstirling91@gmail.com>
	 *  @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
	 *  @link     https://github.com/mohadesz/Loris-Trunk
	 */
var Loading=React.createClass({displayName:"Loading",render:function(){return React.createElement("div",{className:"row"},React.createElement("h3",{className:"text-center loading-header"},"We are currently working hard to load your data. Please be patient."),React.createElement("div",{className:"spinner"},React.createElement("div",{className:"bounce1"}),React.createElement("div",{className:"bounce2"}),React.createElement("div",{className:"bounce3"})))}}),TabPane=React.createClass({displayName:"TabPane",mixins:[React.addons.PureRenderMixin],render:function(){var classList="tab-pane";return this.props.Active&&(classList+=" active"),this.props.Loading?React.createElement("div",{className:classList,id:this.props.TabId},React.createElement(Loading,null)):React.createElement("div",{className:classList,id:this.props.TabId},React.createElement("h1",null,this.props.Title),this.props.children)}}),InfoTabPane=React.createClass({displayName:"InfoTabPane",mixins:[React.addons.PureRenderMixin],render:function(){return React.createElement(TabPane,{Title:"Welcome to the Data Query Tool",TabId:this.props.TabId,Active:!0,Loading:this.props.Loading},React.createElement("p",null,"Data was last updated on ",this.props.UpdatedTime,"."),React.createElement("p",null,"Please define or use your query by using the following tabs."),React.createElement("dl",null,React.createElement("dt",null,"Define Fields"),React.createElement("dd",null,"Define the fields to be added to your query here."),React.createElement("dt",null,"Define Filters"),React.createElement("dd",null,"Define the criteria to filter the data for your query here."),React.createElement("dt",null,"View Data"),React.createElement("dd",null,"See the results of your query."),React.createElement("dt",null,"Statistical Analysis"),React.createElement("dd",null,"Visualize or see basic statistical measures from your query here."),React.createElement("dt",null,"Load Saved Query"),React.createElement("dd",null,"Load a previously saved query (by name) by selecting from this menu."),React.createElement("dt",null,"Manage Saved Queries"),React.createElement("dd",null,"Either save your current query or see the criteria of previously saved quer  ies here.")))}}),FieldSelectTabPane=React.createClass({displayName:"FieldSelectTabPane",render:function(){return React.createElement(TabPane,{TabId:this.props.TabId,Loading:this.props.Loading},React.createElement(FieldSelector,{title:"Fields",items:this.props.categories,onFieldChange:this.props.onFieldChange,selectedFields:this.props.selectedFields,Visits:this.props.Visits,fieldVisitSelect:this.props.fieldVisitSelect}))}}),FilterSelectTabPane=React.createClass({displayName:"FilterSelectTabPane",render:function(){return React.createElement(TabPane,{TabId:this.props.TabId,Loading:this.props.Loading},React.createElement(FilterBuilder,{items:this.props.categories,updateFilter:this.props.updateFilter,filter:this.props.filter,Visits:this.props.Visits}))}}),ViewDataTabPane=React.createClass({displayName:"ViewDataTabPane",getInitialState:function(){return{sessions:[]}},runQuery:function(){this.props.onRunQueryClicked&&this.props.onRunQueryClicked(this.props.Fields,this.props.Sessions)},changeDataDisplay:function(displayID){this.props.changeDataDisplay(displayID)},getOrCreateProgressElement:function(id){var progress,element=document.getElementById(id);return element?element:(progress=document.getElementById("progress"),element=document.createElement("div"),element.setAttribute("id",id),progress.appendChild(element),element)},getOrCreateDownloadLink:function(fileName,type){var parentEl,el2,element=document.getElementById("DownloadLink"+fileName);return element?element:(parentEl=document.getElementById("downloadlinksUL"),element=document.createElement("a"),element.download=fileName,element.type=type,element.textContent="Zip file: "+fileName,element.setAttribute("id","DownloadLink"+fileName),el2=document.createElement("li"),el2.appendChild(element),parentEl.appendChild(el2),element)},downloadData:function(){var saveworker,FileList=(new JSZip,this.props.FileData),dataURLs=(new Array(FileList.length),[]),that=this;window.dataBlobs=[],(FileList.length<100||confirm("You are trying to download more than 100 files. This may be slow or crash your web browser.\n\nYou may want to consider splitting your query into more, smaller queries by defining more restrictive filters.\n\nPress OK to continue with attempting to download current files or cancel to abort."))&&(saveworker=new Worker(loris.BaseURL+"/GetJS.php?Module=dataquery&file=workers/savezip.js"),saveworker.addEventListener("message",function(e){var link,progress,FileName,NewFileName,downloadLinks,i;if("SaveFile"===e.data.cmd)progress=that.getOrCreateProgressElement("download_progress"),window.dataBlobs[e.data.FileNo-1]=new Blob([e.data.buffer],{type:"application/zip"}),dataURLs[e.data.FileNo-1]=window.URL.createObjectURL(window.dataBlobs[e.data.FileNo-1]),link=that.getOrCreateDownloadLink(e.data.Filename,"application/zip"),link.href=dataURLs[e.data.FileNo-1],progress=that.getOrCreateProgressElement("zip_progress"),progress.textContent="";else if("Progress"===e.data.cmd)progress=that.getOrCreateProgressElement("download_progress"),progress.innerHTML='Downloading files: <progress value="'+e.data.Complete+'" max="'+e.data.Total+'">'+e.data.Complete+" out of "+e.data.Total+"</progress>";else if("Finished"===e.data.cmd){if(1===dataURLs.length&&$("#downloadlinksUL li a")[0].click(),dataURLs.length>1)for(progress=document.getElementById("downloadlinks"),progress.style.display="initial",downloadLinks=$("#downloadlinksUL li a"),i=0;i<dataURLs.length;i+=1)FileName=downloadLinks[i].id.slice("DownloadLinkFiles-".length,-4),NewFileName="files-"+FileName+"of"+e.data.NumFiles+".zip",downloadLinks[i].download=NewFileName,downloadLinks[i].href=dataURLs[i],downloadLinks[i].textContent="Zip file: "+NewFileName;progress=that.getOrCreateProgressElement("download_progress"),progress.textContent="Finished generating zip files"}else"CreatingZip"===e.data.cmd&&(progress=that.getOrCreateProgressElement("zip_progress"),progress.textContent="Creating a zip file with current batch of downloaded files. Process may be slow before proceeding.")}),saveworker.postMessage({Files:FileList,BaseURL:loris.BaseURL}))},render:function(){var buttons=React.createElement("div",{className:"row"},React.createElement("div",{className:"commands col-xs-12 form-group"},React.createElement("button",{className:"btn btn-primary",onClick:this.runQuery},"Run Query"),React.createElement("button",{className:"btn btn-primary",onClick:this.downloadData},"Download Data as ZIP")),React.createElement("div",{id:"progress",className:"col-xs-12"}),React.createElement("div",{id:"downloadlinks",className:"col-xs-12"},React.createElement("ul",{id:"downloadlinksUL"}))),criteria=[];for(var el in this.props.Criteria)if(this.props.Criteria.hasOwnProperty(el)){var item=this.props.Criteria[el];void 0===item?criteria.push(React.createElement("div",{className:"alert alert-warning",role:"alert"},el," has been added as a filter but not had criteria defined.")):criteria.push(React.createElement("div",{className:"row"},React.createElement("span",{className:"col-sm-3"},el),React.createElement("span",{className:"col-sm-3"},item.operator),React.createElement("span",{className:"col-sm-3"},item.value)))}return React.createElement(TabPane,{TabId:this.props.TabId,Loading:this.props.Loading},React.createElement("h2",null,"Query Criteria"),criteria," ",buttons,React.createElement("div",{className:"form-group form-horizontal row"},React.createElement("label",{for:"selected-input",className:"col-sm-1 control-label"},"Data"),React.createElement("div",{className:"col-sm-4"},React.createElement("div",{className:"btn-group"},React.createElement("button",{id:"selected-input",type:"button",className:"btn btn-default dropdown-toggle","data-toggle":"dropdown"},React.createElement("span",{id:"search_concept"},this.props.displayType),React.createElement("span",{className:"caret"})),React.createElement("ul",{className:"dropdown-menu",role:"menu"},React.createElement("li",{onClick:this.changeDataDisplay.bind(this,0)},React.createElement("div",{className:"col-sm-12"},React.createElement("h5",{className:""},"Cross-sectional"))),React.createElement("li",{onClick:this.changeDataDisplay.bind(this,1)},React.createElement("div",{className:"col-sm-12"},React.createElement("h5",{className:""},"Longitudinal"))))))),React.createElement(StaticDataTable,{Headers:this.props.RowHeaders,RowNumLabel:"Identifiers",Data:this.props.Data,RowNameMap:this.props.RowInfo}))}}),ScatterplotGraph=React.createClass({displayName:"ScatterplotGraph",lsFit:function(data){var slope,xi,yi,i=0,means=jStat(data).mean(),xmean=means[0],ymean=means[1],numerator=0,denominator=0;for(i=0;i<data.length;i+=1)xi=data[i][0],yi=data[i][1],numerator+=(xi-xmean)*(yi-ymean),denominator+=(xi-xmean)*(xi-xmean);return slope=numerator/denominator,[ymean-slope*xmean,slope]},minmaxx:function(arr){var i,min,max;for(i=0;i<arr.length;i+=1)(arr[i][0]<min||void 0===min)&&void 0!==arr[i][0]&&null!==arr[i][0]&&(min=arr[i][0]),(arr[i][0]>max||void 0===max)&&void 0!==arr[i][0]&&null!==arr[i][0]&&(max=arr[i][0]);return[min,max]},updateScatterplot:function(){var min,max,group_label,minmax,LS,slope,start,label,dataset,xaxis=document.getElementById("scatter-xaxis").value,yaxis=document.getElementById("scatter-yaxis").value,grouping=document.getElementById("scatter-group").value,data=this.props.Data,points=[],field1=[],field2=[],grouped_points={},i=0,plots=[],plotY=function(x){return[x,start+slope*x]};for(i=0;i<data.length;i+=1)points.push([data[i][xaxis],data[i][yaxis]]),field1.push(data[i][xaxis]),field2.push(data[i][yaxis]),grouping&&(group_label=data[i][grouping],grouped_points[group_label]instanceof Array||(grouped_points[group_label]=[]),grouped_points[group_label].push([data[i][xaxis],data[i][yaxis]]));if("ungrouped"===grouping)minmax=this.minmaxx(points),min=minmax[0],max=minmax[1],LS=this.lsFit(points),slope=LS[1],start=LS[0],$.plot("#scatterplotdiv",[{label:"Data Points",data:points,points:{show:!0}},{label:"Least Squares Fit",data:jStat.seq(min,max,3,plotY),lines:{show:!0}}],{});else{minmax=this.minmaxx(points),min=minmax[0],max=minmax[1],i=0;for(dataset in grouped_points)grouped_points.hasOwnProperty(dataset)&&(label=document.getElementById("scatter-group").selectedOptions.item(0).textContent+" = "+dataset,plots.push({color:i,label:dataset,data:grouped_points[dataset],points:{show:!0}}),LS=this.lsFit(grouped_points[dataset]),slope=LS[1],start=LS[0],plots.push({color:i,data:jStat.seq(min,max,3,plotY),lines:{show:!0}}),i+=1);$.plot("#scatterplotdiv",plots,{})}$("#correlationtbl tbody").children().remove(),$("#correlationtbl tbody").append("<tr><td>"+jStat.covariance(field1,field2)+"</td><td>"+jStat.corrcoeff(field1,field2)+"</td></tr>")},render:function(){var options=this.props.Fields.map(function(element,key){return console.log(element),React.createElement("option",{value:key},element)}),scatterStyle={width:"500px",height:"500px"};return React.createElement("div",null,React.createElement("h2",null,"Scatterplot"),React.createElement("div",{className:"col-xs-4 col-md-3"},"Column for X Axis"),React.createElement("div",{className:"col-xs-8 col-md-3"},React.createElement("select",{id:"scatter-xaxis",onChange:this.updateScatterplot},React.createElement("option",null,"None"),options)),React.createElement("div",{className:"col-xs-4 col-md-3"},"Column for Y Axis"),React.createElement("div",{className:"col-xs-8 col-md-3"},React.createElement("select",{id:"scatter-yaxis",onChange:this.updateScatterplot},React.createElement("option",null,"None"),options)),React.createElement("div",{className:"col-xs-4 col-md-3"},"Group by column"),React.createElement("div",{className:"col-xs-8 col-md-3"},React.createElement("select",{id:"scatter-group",onChange:this.updateScatterplot},React.createElement("option",null,"None"),options)),React.createElement("h3",null,"Scatterplot"),React.createElement("div",{id:"scatterplotdiv",style:scatterStyle}),React.createElement("h3",null,"Statistics"),React.createElement("table",{id:"correlationtbl"},React.createElement("thead",null,React.createElement("tr",null,React.createElement("th",null,"Covariance"),React.createElement("th",null,"Correlation Coefficient"))),React.createElement("tbody",null)))}}),StatsVisualizationTabPane=React.createClass({displayName:"StatsVisualizationTabPane",getDefaultProps:function(){return{Data:[]}},getInitialState:function(){return{displayed:!1}},render:function(){if(0===this.props.Data.length)var content=React.createElement("div",null,"Could not calculate stats, query not run");else{for(var stats=jStat(this.props.Data),min=stats.min(),max=stats.max(),stddev=stats.stdev(),mean=stats.mean(),meandev=stats.meandev(),meansqerr=stats.meansqerr(),quartiles=stats.quartiles(),rows=[],i=0;i<this.props.Fields.length;i+=1)rows.push(React.createElement("tr",null,React.createElement("td",null,this.props.Fields[i]),React.createElement("td",null,min[i]),React.createElement("td",null,max[i]),React.createElement("td",null,stddev[i]),React.createElement("td",null,mean[i]),React.createElement("td",null,meandev[i]),React.createElement("td",null,meansqerr[i]),React.createElement("td",null,quartiles[i][0]),React.createElement("td",null,quartiles[i][1]),React.createElement("td",null,quartiles[i][2])));var statsTable=React.createElement("table",{className:"table table-hover table-primary table-bordered colm-freeze"},React.createElement("thead",null,React.createElement("tr",{className:"info"},React.createElement("th",null,"Measure"),React.createElement("th",null,"Min"),React.createElement("th",null,"Max"),React.createElement("th",null,"Standard Deviation"),React.createElement("th",null,"Mean"),React.createElement("th",null,"Mean Deviation"),React.createElement("th",null,"Mean Squared Error"),React.createElement("th",null,"First Quartile"),React.createElement("th",null,"Second Quartile"),React.createElement("th",null,"Third Quartile"))),React.createElement("tbody",null,rows)),content=React.createElement("div",null,React.createElement("h2",null,"Basic Statistics"),statsTable,React.createElement(ScatterplotGraph,{Fields:this.props.Fields,Data:this.props.Data}))}return React.createElement(TabPane,{TabId:this.props.TabId,Loading:this.props.Loading},content)}}),SaveQueryDialog=React.createClass({displayName:"SaveQueryDialog",getInitialState:function(){return{queryName:"",shared:!1}},editName:function(e){this.setState({queryName:e.target.value})},editPublic:function(e){this.setState({shared:e.target.checked})},onSaveClicked:function(){this.props.onSaveClicked&&this.props.onSaveClicked(this.state.queryName,this.state.shared)},onDismissClicked:function(){this.props.onDismissClicked&&this.props.onDismissClicked()},render:function(){return React.createElement("div",{className:"modal show"},React.createElement("div",{className:"modal-dialog"},React.createElement("div",{className:"modal-content"},React.createElement("div",{className:"modal-header"},React.createElement("button",{type:"button",className:"close","aria-label":"Close",onClick:this.onDismissClicked},React.createElement("span",{"aria-hidden":"true"},"×")),React.createElement("h4",{className:"modal-title",id:"myModalLabel"},"Save Current Query")),React.createElement("div",{className:"modal-body"},React.createElement("p",null,"Enter the name you would like to save your query under here:"),React.createElement("div",{className:"input-group"},"Query Name: ",React.createElement("input",{type:"text",className:"form-control",placeholder:"My Query",value:this.state.queryName,onChange:this.editName})),React.createElement("p",null,"Make query a publicly shared query? ",React.createElement("input",{type:"checkbox",checked:this.state.shared?"checked":"",onChange:this.editPublic,"aria-label":"Shared Query"}))),React.createElement("div",{className:"modal-footer"},React.createElement("button",{type:"button",className:"btn btn-default",onClick:this.onDismissClicked},"Close"),React.createElement("button",{type:"button",className:"btn btn-primary",onClick:this.onSaveClicked},"Save changes")))))}}),ManageSavedQueryFilter=React.createClass({displayName:"ManageSavedQueryFilter",render:function(){var filterItem,filter=this.props.filterItem;if(filter.activeOperator){var logicOp="AND",children=filter.children.map(function(element,key){return React.createElement(ManageSavedQueryFilter,{filterItem:element})});return 1===filter.activeOperator&&(logicOp="OR"),React.createElement("li",null,React.createElement("span",null,logicOp),React.createElement("ul",{className:"savedQueryTree"},children))}if(filter=this.props.filterItem,filter.instrument){var operator;switch(filter.operator){case"equal":operator="=";break;case"notEqual":operator="!=";break;case"lessThanEqual":operator="<=";break;case"greaterThanEqual":operator=">=";break;default:operator=filter.operator}filterItem=React.createElement("span",null,filter.instrument,",",filter.field," ",operator," ",filter.value)}else filterItem=React.createElement("span",null,filter.Field," ",filter.Operator," ",filter.Value);return React.createElement("li",null,filterItem)}}),ManageSavedQueryRow=React.createClass({displayName:"ManageSavedQueryRow",getDefaultProps:function(){return{Name:"Unknown",Query:{Fields:[]}}},render:function(){var filters,fields=[];if(this.props.Query.Fields&&Array.isArray(this.props.Query.Fields))for(var i=0;i<this.props.Query.Fields.length;i+=1)fields.push(React.createElement("li",null,this.props.Query.Fields[i]));else if(this.props.Query.Fields)for(var instrument in this.props.Query.Fields)for(var field in this.props.Query.Fields[instrument])"allVisits"!==field&&fields.push(React.createElement("li",null,instrument,",",field));if(0===fields.length&&fields.push(React.createElement("li",null,"No fields defined")),this.props.Query.Conditions){var operator,filter;this.props.Query.Conditions.activeOperator?this.props.Query.Conditions.children?(operator=0===this.props.Query.Conditions.activeOperator?React.createElement("span",null,"AND"):React.createElement("span",null,"OR"),filter=this.props.Query.Conditions.children.map(function(element,key){return React.createElement(ManageSavedQueryFilter,{filterItem:element})})):operator=React.createElement("span",null,"No filters defined"):0===this.props.Query.Conditions.length?operator=React.createElement("span",null,"No filters defined"):(operator=React.createElement("span",null,"AND"),filter=this.props.Query.Conditions.map(function(element,key){return React.createElement(ManageSavedQueryFilter,{filterItem:element})})),filters=React.createElement("div",{className:"tree"},React.createElement("ul",{className:"firstUL savedQueryTree"},React.createElement("li",null,operator,React.createElement("ul",{className:"savedQueryTree"},filter))))}return filters||(filters=React.createElement("strong",null,"No filters defined")),React.createElement("tr",null,React.createElement("td",null,this.props.Name),React.createElement("td",null,React.createElement("ul",null,fields)),React.createElement("td",null,filters))}}),ManageSavedQueriesTabPane=React.createClass({displayName:"ManageSavedQueriesTabPane",dismissDialog:function(){this.setState({savePrompt:!1})},getInitialState:function(){return{savePrompt:!1,queriesLoaded:!1,queries:{}}},saveQuery:function(){this.setState({savePrompt:!0})},savedQuery:function(name,shared){this.props.onSaveQuery&&this.props.onSaveQuery(name,shared,"false"),this.setState({savePrompt:!1})},getDefaultProps:function(){return{userQueries:[],globalQueries:[],queriesLoaded:!1,queryDetails:{}}},render:function(){var queryRows=[];if(this.props.queriesLoaded)for(var i=0;i<this.props.userQueries.length;i+=1){var query=this.props.queryDetails[this.props.userQueries[i]],name="Unnamed Query: "+this.props.userQueries[i];query.Meta.name&&(name=query.Meta.name),queryRows.push(React.createElement(ManageSavedQueryRow,{Name:name,Query:query}))}else queryRows.push(React.createElement("tr",null,React.createElement("td",{colSpan:"3"},"Loading saved query details")));var savePrompt="";this.state.savePrompt&&(savePrompt=React.createElement(SaveQueryDialog,{onDismissClicked:this.dismissDialog,onSaveClicked:this.savedQuery}));var content=React.createElement("div",null,React.createElement("h2",null,"Your currently saved queries"),React.createElement("button",{onClick:this.saveQuery},"Save Current Query"),React.createElement("table",{className:"table table-hover table-primary table-bordered colm-freeze"},React.createElement("thead",null,React.createElement("tr",{className:"info"},React.createElement("th",null,"Query Name"),React.createElement("th",null,"Fields"),React.createElement("th",null,"Filters"))),React.createElement("tbody",null,queryRows)),savePrompt);return React.createElement(TabPane,{TabId:this.props.TabId,Loading:this.props.Loading},content)}});window.Loading=Loading,window.TabPane=TabPane,window.InfoTabPane=InfoTabPane,window.FieldSelectTabPane=FieldSelectTabPane,window.FilterSelectTabPane=FilterSelectTabPane,window.ViewDataTabPane=ViewDataTabPane,window.ScatterplotGraph=ScatterplotGraph,window.StatsVisualizationTabPane=StatsVisualizationTabPane,window.SaveQueryDialog=SaveQueryDialog,window.ManageSavedQueryFilter=ManageSavedQueryFilter,window.ManageSavedQueryRow=ManageSavedQueryRow,window.ManageSavedQueriesTabPane=ManageSavedQueriesTabPane,exports.default={Loading:Loading,TabPane:TabPane,InfoTabPane:InfoTabPane,FieldSelectTabPane:FieldSelectTabPane,FilterSelectTabPane:FilterSelectTabPane,ViewDataTabPane:ViewDataTabPane,ScatterplotGraph:ScatterplotGraph,StatsVisualizationTabPane:StatsVisualizationTabPane,SaveQueryDialog:SaveQueryDialog,ManageSavedQueryFilter:ManageSavedQueryFilter,ManageSavedQueryRow:ManageSavedQueryRow,ManageSavedQueriesTabPane:ManageSavedQueriesTabPane}}]);
//# sourceMappingURL=react.tabs.js.map