!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var LorisElement=React.createClass({displayName:"LorisElement",render:function(){var element=this.props.element,elementHtml="";switch(element.Type){case"header":elementHtml=React.createElement("h2",null,element.Description);break;case"label":elementHtml=React.createElement("p",null,element.Description);break;case"score":elementHtml=React.createElement(StaticElement,{text:0,label:element.Description});break;case"text":elementHtml="small"===element.Options.Type?React.createElement(TextboxElement,{label:element.Description}):React.createElement(TextareaElement,{label:element.Description});break;case"select":elementHtml=element.Options.AllowMultiple?React.createElement(SelectElement,{label:element.Description,options:element.Options.Values,multiple:!0}):React.createElement(SelectElement,{label:element.Description,options:element.Options.Values});break;case"date":elementHtml=React.createElement(DateElement,{label:element.Description,minYear:element.Options.MinDate,maxYear:element.Options.MaxDate});break;case"numeric":elementHtml=React.createElement(NumericElement,{label:element.Description,min:element.Options.MinValue,max:element.Options.MaxValue})}return React.createElement("div",null,elementHtml)}}),QuestionText=React.createClass({displayName:"QuestionText",getDefaultProps:function(){return{inputLabel:"Question Text"}},onChange:function(e){this.props.updateState({Description:e.target.value})},render:function(){var errorMessage="",errorClass="form-group";return this.props.element.error&&this.props.element.error.questionText&&(errorMessage=React.createElement("font",{className:"form-error"},this.props.element.error.questionText),errorClass+=" has-error"),React.createElement("div",{className:errorClass},React.createElement("label",{className:"col-sm-2 control-label"},this.props.inputLabel,": "),React.createElement("div",{className:"col-sm-6"},React.createElement("input",{className:"form-control col-xs-12",type:"text",id:"questionText",size:"75",value:this.props.element?this.props.element.Description:"",onChange:this.onChange}),errorMessage))}}),BasicOptions=React.createClass({displayName:"BasicOptions",onChange:function(e){var questionName=e.target.value.trim().split(" ").join("_");this.props.updateState({Name:questionName})},render:function(){var errorMessage="",errorClass="form-group";return this.props.element.error&&this.props.element.error.questionName&&(errorMessage=React.createElement("font",{className:"form-error"},this.props.element.error.questionName),errorClass+=" has-error"),React.createElement("div",null,React.createElement("div",{className:errorClass},React.createElement("label",{className:"col-sm-2 control-label"},"Question Name: "),React.createElement("div",{className:"col-sm-6"},React.createElement("input",{className:"form-control",type:"text",id:"questionName",onChange:this.onChange,value:this.props.element?this.props.element.Name:""}),errorMessage)),React.createElement(QuestionText,{updateState:this.props.updateState,element:this.props.element}))}}),DropdownOptions=React.createClass({displayName:"DropdownOptions",getInitialState:function(){return{option:""}},onChange:function(e){this.setState({option:e.target.value})},addOption:function(){var option=this.state.option.trim();if(""===option){var _temp=this.state.error?this.state.error:{};return _temp.newSelectOption="Dropdown options cannot be empty!",void this.setState({error:_temp})}if(this.state.error){var _temp2=this.state.error;delete _temp2.newSelectOption,this.setState({error:_temp2})}var temp=Instrument.clone(this.props.element.Options),key=Instrument.enumize(this.state.option);temp.Values[key]=this.state.option,this.props.updateState({Options:temp}),this.state.option=""},resetOptions:function(){var temp=Instrument.clone(this.props.element.Options);temp.Values={},this.props.updateState({Options:temp})},render:function(){var multi="",options=Instrument.clone(this.props.element.Options.Values),errorMessage="",dropdownClass="form-group";return this.props.element.Options.AllowMultiple&&(multi="multiple"),this.state.error&&this.state.error.newSelectOption&&(errorMessage=React.createElement("span",{className:"form-error"},this.state.error.newSelectOption),dropdownClass+=" has-error"),React.createElement("div",null,React.createElement(BasicOptions,{updateState:this.props.updateState,element:this.props.element}),React.createElement("div",{className:dropdownClass},React.createElement("label",{className:"col-sm-2 control-label"},"Dropdown Option: "),React.createElement("div",{className:"col-sm-3"},React.createElement("input",{className:"form-control",type:"text",id:"newSelectOption",value:this.state.option,onChange:this.onChange})),React.createElement("input",{className:"btn btn-default",type:"button",value:"Add option",onClick:this.addOption.bind(this,!1)}),React.createElement("input",{className:"btn btn-default",type:"button",value:"Reset",onClick:this.resetOptions}),React.createElement("div",{className:"col-sm-6 col-sm-offset-2"},errorMessage)),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-2 control-label"},"Preview: "),React.createElement("div",{className:"col-sm-2"},React.createElement("select",{multiple:multi,id:"selectOptions",className:"form-control"},Object.keys(options).map(function(option,key){return React.createElement("option",{key:key},options[option])})))))}}),DateOptions=React.createClass({displayName:"DateOptions",getInitialState:function(){return{dateFormat:{Date:"Standard Date",BasicDate:"Basic Date (does not include 'Not Answered' option)",MonthYear:"Month Year (does not include day of the month)"}}},componentDidMount:function(){this.props.element.Options.dateFormat=""},onChange:function(e){var options=Instrument.clone(this.props.element.Options);"datemin"===e.target.id&&e.target.value.length>0?options.MinDate=e.target.value+"-01-01":"datemax"===e.target.id&&e.target.value.length>0?options.MaxDate=e.target.value+"-12-31":"dateFormat"===e.target.id&&(options.dateFormat=e.target.value),this.props.updateState({Options:options})},render:function(){var minYear=this.props.element.Options.MinDate.split("-")[0],maxYear=this.props.element.Options.MaxDate.split("-")[0],dateOptionsClass="options form-group",errorMessage="",dateFormatOptions=this.state.dateFormat;return this.props.element.error&&this.props.element.error.dateOption&&(errorMessage=React.createElement("span",{className:"form-error"},this.props.element.error.dateOption),dateOptionsClass+=" has-error"),React.createElement("div",null,React.createElement(BasicOptions,{updateState:this.props.updateState,element:this.props.element}),React.createElement("div",{id:"dateoptions",className:dateOptionsClass},React.createElement("label",{className:"col-sm-2 control-label"},"Start year: "),React.createElement("div",{className:"col-sm-2"},React.createElement("input",{className:"form-control",type:"number",id:"datemin",min:"1900",max:"2100",value:minYear,onChange:this.onChange}),errorMessage),React.createElement("label",{className:"col-sm-2 control-label"},"End year: "),React.createElement("div",{className:"col-sm-2"},React.createElement("input",{className:"form-control",type:"number",id:"datemax",min:"1900",max:"2100",onChange:this.onChange,value:maxYear}))),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-2 control-label"},"Date Format: "),React.createElement("div",{className:"col-sm-6"},React.createElement("select",{id:"dateFormat",className:"form-control",onChange:this.onChange},Object.keys(dateFormatOptions).map(function(option,key){return React.createElement("option",{key:key,value:option},dateFormatOptions[option])})))))}}),NumericOptions=React.createClass({displayName:"NumericOptions",onChange:function(e){var options=Instrument.clone(this.props.element.Options);"numericmin"===e.target.id?options.MinValue=parseInt(e.target.value,10):"numericmax"===e.target.id&&(options.MaxValue=parseInt(e.target.value,10)),this.props.updateState({Options:options})},render:function(){var errorMessage="",optionsClass="options form-group";return this.props.element.error&&this.props.element.error.numeric&&(errorMessage=React.createElement("span",{className:"form-error"},this.props.element.error.numeric),optionsClass+="options form-group has-error"),React.createElement("div",null,React.createElement(BasicOptions,{updateState:this.props.updateState,element:this.props.element}),React.createElement("div",{id:"numericoptions",className:optionsClass},React.createElement("label",{className:"col-sm-2 control-label"},"Min: "),React.createElement("div",{className:"col-sm-2"},React.createElement("input",{className:"form-control",type:"number",id:"numericmin",onChange:this.onChange,value:this.props.element.Options.MinValue})),React.createElement("label",{className:"col-sm-2 control-label"},"Max: "),React.createElement("div",{className:"col-sm-2"},React.createElement("input",{className:"form-control",type:"number",id:"numericmax",onChange:this.onChange,value:this.props.element.Options.MaxValue})),React.createElement("div",{className:"col-sm-offset-2 col-sm-10"},errorMessage)))}}),ListElements=React.createClass({displayName:"ListElements",selectType:function(newId,newValue){var newState={selected:{id:newId,value:newValue}},multi=!1,textSize="small";switch(newId){case"textarea":textSize="large";case"textbox":newState.Options={Type:textSize};break;case"multiselect":multi=!0;case"dropdown":newState.Options={Values:{},AllowMultiple:multi};break;case"date":newState.Options={MinDate:"",MaxDate:""};break;case"numeric":newState.Options={MinValue:0,MaxValue:0}}this.props.updateState(newState)},render:function(){return React.createElement("div",{className:"form-group"},React.createElement("label",{htmlFor:"selected-input",className:"col-sm-2 control-label"},"Question Type:"),React.createElement("div",{className:"col-sm-4"},React.createElement("div",{className:"btn-group"},React.createElement("button",{id:"selected-input",type:"button",className:"btn btn-default dropdown-toggle","data-toggle":"dropdown"},React.createElement("span",{id:"search_concept"},this.props.value," "),React.createElement("span",{className:"caret"})),React.createElement("ul",{className:"dropdown-menu",role:"menu"},React.createElement("li",null,React.createElement("div",{className:"col-sm-12"},React.createElement("h5",{className:""},"Information"))),React.createElement("li",{onClick:this.selectType.bind(this,"header","Header")},React.createElement("a",{id:"header",className:"option",title:"Centered, header information"},"Header")),React.createElement("li",{onClick:this.selectType.bind(this,"label","Label")},React.createElement("a",{id:"label",className:"option",title:"Unemphasized display text"},"Label")),React.createElement("li",{onClick:this.selectType.bind(this,"score","Scored Field")},React.createElement("a",{id:"scored",className:"option",title:"Column which stores calculated data"},"Scored Field")),React.createElement("li",{className:"divider"}),React.createElement("li",null,React.createElement("div",{className:"col-sm-12"},React.createElement("h5",{className:""},"Data entry"))),React.createElement("li",{onClick:this.selectType.bind(this,"textbox","Textbox")},React.createElement("a",{id:"textbox",className:"option",title:"Text box for user data entry"},"Textbox")),React.createElement("li",{onClick:this.selectType.bind(this,"textarea","Textarea")},React.createElement("a",{id:"textarea",className:"option",title:"Larger text area for data entry"},"Textarea")),React.createElement("li",{onClick:this.selectType.bind(this,"dropdown","Dropdown")},React.createElement("a",{id:"dropdown",className:"option",title:"Dropdown menu for users to select data from"},"Dropdown")),React.createElement("li",{onClick:this.selectType.bind(this,"multiselect","Multiselect")},React.createElement("a",{id:"multiselect",className:"option",title:"Data entry where multiple options may be selected"},"Multiselect")),React.createElement("li",{onClick:this.selectType.bind(this,"date","Date")},React.createElement("a",{id:"date",className:"option",title:"User data entry of a date"},"Date")),React.createElement("li",{onClick:this.selectType.bind(this,"numeric","Numeric")},React.createElement("a",{id:"numeric",className:"option",title:"User data entry of a number"},"Numeric")),React.createElement("li",{className:"divider"}),React.createElement("li",null,React.createElement("div",{className:"col-sm-12"},React.createElement("h5",{className:""},"Formatting"))),React.createElement("li",{onClick:this.selectType.bind(this,"line","Blank Line")},React.createElement("a",{id:"line",className:"option",title:"Empty line"},"Blank Line")),React.createElement("li",{onClick:this.selectType.bind(this,"page-break","Page Break")},React.createElement("a",{id:"page-break",className:"option",title:"Start a new page"},"Page Break"))))))}}),AddElement=React.createClass({displayName:"AddElement",getInitialState:function(){var state;return state=this.props.element?{Options:Instrument.clone(this.props.element.Options),Description:Instrument.clone(this.props.element.Description),Name:Instrument.clone(this.props.element.Name),selected:Instrument.clone(this.props.element.selected)}:{Options:{},Description:"",Name:"",selected:{id:"",value:"Select One"}}},updateState:function(newState){this.setState(newState)},addQuestion:function(){var selected=this.state.selected.id,questionText=this.state.Description,questionName=this.state.Name,hasError=!1;if(questionName&&questionName.indexOf("status")>-1)return void alert("Question name can't contain 'status' as part of the name!");if(!selected)return void alert("No element type selected");if("date"===selected){var min=this.state.Options.MinDate,max=this.state.Options.MaxDate,minDate=Date.parse(min),maxDate=Date.parse(max);if(isNaN(minDate)&&""!==min||isNaN(maxDate)&&""!==max){var temp=this.state.error?this.state.error:{};temp.dateOption="Invalid date provided",this.setState({error:temp}),hasError=!0}if(minDate>maxDate&&""!==min&&""!==max){var _temp3=this.state.error?this.state.error:{};_temp3.dateOption="End year append befor start year",this.setState({error:_temp3}),hasError=!0}if(!hasError&&this.state.error){var _temp4=this.state.error;delete _temp4.dateOption,this.setState({error:_temp4})}}if("numeric"===selected){var _min=this.state.Options.MinValue,_max=this.state.Options.MaxValue;if(_min>=_max){var _temp5=this.state.error?this.state.error:{};_temp5.numeric="Max value must be larger than min value",this.setState({error:_temp5}),hasError=!0}if(!hasError&&this.state.error){var _temp6=this.state.error;delete _temp6.numeric,this.setState({error:_temp6})}}if(""===questionText&&"line"!==selected){var _temp7=this.state.error?this.state.error:{};"page-break"===selected?_temp7.questionText="Must use question text as page header":_temp7.questionText="No question text specified",this.setState({error:_temp7}),hasError=!0}if(!hasError&&this.state.error){var _temp8=this.state.error;delete _temp8.questionText,this.setState({error:_temp8})}if(""===questionName&&"header"!==selected&&"label"!==selected&&"line"!==selected&&"page-break"!==selected){var _temp9=this.state.error?this.state.error:{};_temp9.questionName="Must specifiy name for database to save value into",this.setState({error:_temp9}),hasError=!0}else if(this.state.error){var _temp10=this.state.error;delete _temp10.questionName,this.setState({error:_temp10})}if(!hasError){switch(selected){case"header":case"label":questionName="";break;case"textbox":case"textarea":selected="text";break;case"dropdown":case"multiselect":selected="select";break;case"page-break":return void this.props.addPage(questionText)}delete this.state.error;var element={Type:selected,Description:questionText,Name:questionName,Options:this.state.Options,selected:this.state.selected};hasError="undefined"==typeof this.props.index?!this.props.updateQuestions(element):!this.props.updateQuestions(element,this.props.index),hasError&&this.setState(function(state){var temp=state.error?state.error:{};return temp.questionName="Duplicate question name",{error:temp}})}},addOption:function(multi){this.setState(function(state){var temp=state.options,option=multi?$("#newmultiSelectOption").val():$("#newSelectOption").val();return temp.push(option),{options:temp}})},resetOptions:function(){this.setState({options:[]})},render:function(){var questionInput=void 0,header="",buttons=void 0;switch(this.state.selected.id){case"header":case"label":questionInput=React.createElement(QuestionText,{updateState:this.updateState,element:this.state});break;case"page-break":questionInput=React.createElement(QuestionText,{updateState:this.updateState,element:this.state,inputLabel:"Page Name"});break;case"score":case"textbox":case"textarea":questionInput=React.createElement(BasicOptions,{updateState:this.updateState,element:this.state});break;case"multiselect":case"dropdown":questionInput=React.createElement(DropdownOptions,{updateState:this.updateState,element:this.state});break;case"date":questionInput=React.createElement(DateOptions,{updateState:this.updateState,element:this.state});break;case"numeric":questionInput=React.createElement(NumericOptions,{updateState:this.updateState,element:this.state})}return this.props.element?buttons=React.createElement("input",{className:"btn btn-default",type:"button",value:"Edit Row",onClick:this.addQuestion}):(header=React.createElement("h2",null,"Add Question"),buttons=React.createElement("input",{className:"btn btn-default",type:"button",value:"Add Row",onClick:this.addQuestion})),React.createElement("div",{className:"col-xs-12"},header,React.createElement("div",{className:"form-horizontal",role:"form"},React.createElement(ListElements,{updateState:this.updateState,value:this.state.selected.value}),questionInput,React.createElement("div",{className:"form-group"},React.createElement("div",{className:"col-sm-offset-2 col-sm-10"},buttons))))}});window.LorisElement=LorisElement,window.QuestionText=QuestionText,window.BasicOptions=BasicOptions,window.DropdownOptions=DropdownOptions,window.DateOptions=DateOptions,window.NumericOptions=NumericOptions,window.ListElements=ListElements,window.AddElement=AddElement,exports.default={LorisElement:LorisElement,QuestionText:QuestionText,BasicOptions:BasicOptions,DropdownOptions:DropdownOptions,DateOptions:DateOptions,NumericOptions:NumericOptions,ListElements:ListElements,AddElement:AddElement}}]);
//# sourceMappingURL=react.questions.js.map