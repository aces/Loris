{"version":3,"sources":["../jsx/react.questions.js"],"names":[],"mappings":"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","file":"react.questions.js","sourcesContent":["/**\n *\tThis file contains the React classes for instrument builder\n * \tmodule. It is used to add and edit questions in the instrument\n *\tbuilder.\n */\n\n/*\n *\tThis is the React class for the question text input\n */\nQuestionText = React.createClass({\n    // Keep track of the current input\n\tonChange: function(e){\n\t\tthis.props.updateState({Description: e.target.value});\n\t},\n\t// Render the HTML\n\trender: function () {\n\t\tvar errorMessage = '',\n\t\t\terrorClass = 'form-group';\n\t\tif (this.props.element.error && this.props.element.error.questionText) {\n\t\t\t// If an error is present, display the error\n\t\t\terrorMessage = (<font className=\"form-error\">{this.props.element.error.questionText}</font>);\n\t\t\terrorClass += \" has-error\";\n\t\t}\n\t\treturn (\n\t\t\t<div className={errorClass}>\n                <label className=\"col-sm-2 control-label\">Question Text: </label>\n                <div className=\"col-sm-6\">\n                    <input className=\"form-control col-xs-12\"\n                    \ttype=\"text\" id=\"questionText\"\n                    \tsize=\"75\"\n                    \tvalue={this.props.element ? this.props.element.Description : ''}\n                    \tonChange={this.onChange}\n                    />\n                    {errorMessage}\n                </div>\n            </div>\n\t\t)\n\t}\n});\n\n/*\n *\tThis is the React class for the question name input\n */\nBasicOptions = React.createClass({\n\t// Keep track of the current input\n\tonChange: function(e){\n\t\tthis.props.updateState({Name: e.target.value});\n\t},\n\t// Render the HTML\n\trender: function () {\n\t\tvar errorMessage = '',\n\t\t\terrorClass = 'form-group';\n\t\tif (this.props.element.error && this.props.element.error.questionName) {\n\t\t\t// If an error is present, display the error\n\t\t\terrorMessage = (<font className=\"form-error\">{this.props.element.error.questionName}</font>);\n\t\t\terrorClass += \" has-error\";\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={errorClass}>\n\t                <label className=\"col-sm-2 control-label\">Question Name: </label>\n\t                <div className=\"col-sm-6\">\n\t                    <input className=\"form-control\"\n\t                    \ttype=\"text\" id=\"questionName\"\n\t                    \tonChange={this.onChange}\n\t                    \tvalue={this.props.element ? this.props.element.Name : ''}\n\t                    />\n\t                    {errorMessage}\n\t                </div>\n\t            </div>\n            \t<QuestionText updateState={this.props.updateState} element={this.props.element} />\n            </div>\n\t\t)\n\t}\n});\n\n/*\n *\tThis is the React class for the Dropdown options\n */\nDropdownOptions = React.createClass({\n\t// Keep track the current option input\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\toption: ''\n\t\t}\n\t},\n\tonChange: function(e){\n\t\tthis.setState({\n\t\t\toption: e.target.value\n\t\t});\n\t},\n\t// Add an option to the element\n\taddOption: function(){\n\t\tvar temp = Instrument.clone(this.props.element.Options),\n\t\t\tkey = Instrument.Enumize(this.state.option);\n\t\t\ttemp.Values[key] = this.state.option;\n\t\t\tthis.props.updateState({Options: temp});\n\t},\n\t// Reset the dropdown options\n\tresetOptions: function(){\n\t\ttemp = Instrument.clone(this.props.element.Options);\n\t\ttemp.Values = {};\n\t\tthis.props.updateState({Options: temp});\n\t},\n\t// Render the HTML\n\trender: function () {\n\t\tvar multi = '',\n\t\t\toptions = Instrument.clone(this.props.element.Options.Values);\n\t\t// Set the select option type\n\t\tif (this.props.element.Options.AllowMultiple){\n\t\t\tmulti = \"multiple\";\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<BasicOptions updateState={this.props.updateState} element={this.props.element} />\n\t\t\t\t<div className=\"form-group\">\n                    <label className=\"col-sm-2 control-label\">Dropdown Option: </label>\n                    <div className=\"col-sm-3\">\n                        <input className=\"form-control\" type=\"text\" id=\"newSelectOption\" onChange={this.onChange} />\n                    </div>\n                    <input className=\"btn btn-default\" type=\"button\" value=\"Add option\" onClick={this.addOption.bind(this, false)} />\n                    <input className=\"btn btn-default\" type=\"button\" value=\"Reset\" onClick={this.resetOptions} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"col-sm-2 control-label\">Preview: </label>\n                    <div className=\"col-sm-2\">\n                        <select multiple={multi} id=\"selectOptions\" className=\"form-control\">\n                        \t{Object.keys(options).map(function(option){\n                        \t\treturn (\n                        \t\t\t<option>\n                        \t\t\t\t{options[option]}\n                        \t\t\t</option>\n                        \t\t)\n                        \t})}\n                        </select>\n                \t</div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t)\n\t}\n});\n\n/*\n *\tThis is the React class for the date options\n */\nDateOptions = React.createClass({\n\t// Initilize\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tdateFormat: {\n\t\t\t\t\"Date\" : \"Standard Date\",\n\t\t\t\t\"BasicDate\" : \"Basic Date (does not include 'Not Answered' option)\",\n\t\t\t\t\"MonthYear\" : \"Month Year (does not include day of the month)\" \n\t\t\t}\n\t\t}\n\t},\n\tcomponentDidMount: function() {\n\t\tthis.props.element.Options.dateFormat = \"\";\n\t},\n    // Keep track of the inputed years\n    onChange: function(e) {\n        var options = Instrument.clone(this.props.element.Options);\n        if (e.target.id === 'datemin' && e.target.value.length > 0) {\n            options.MinDate = e.target.value + \"-01-01\";\n        } else if (e.target.id === 'datemax' && e.target.value.length > 0) {\n            options.MaxDate = e.target.value + \"-12-31\";\n        } else if (e.target.id === 'dateFormat') {\n\t\t\toptions.dateFormat = e.target.value;\n\t\t}\n        this.props.updateState({Options: options});\n    },\n    // Render the HTML\n    render: function() {\n        // Truncate off the month and day from the date to only have the year.\n        var minYear = this.props.element.Options.MinDate.split('-')[0],\n            maxYear = this.props.element.Options.MaxDate.split('-')[0];\n\n        var dateOptionsClass = 'options form-group',\n            errorMessage = '';\n\t\t\n\t\tvar dateFormatOptions = this.state.dateFormat;\n\n        if (this.props.element.error && this.props.element.error.dateOption) {\n            // If an error is present, display the error\n            errorMessage = (<span className=\"form-error\">{this.props.element.error.dateOption}</span>);\n            dateOptionsClass += \" has-error\";\n        }\n\n        return (\n            <div>\n                <BasicOptions updateState={this.props.updateState} element={this.props.element} />\t\t\t\t\n                <div id=\"dateoptions\" className={dateOptionsClass}>\n                    <label className=\"col-sm-2 control-label\">Start year: </label>\n                    <div className=\"col-sm-2\">\n                        <input className=\"form-control\" type=\"number\" id=\"datemin\" min=\"1900\" max=\"2100\" value={minYear} onChange={this.onChange} />\n                        {errorMessage}\n                    </div>\n                    <label className=\"col-sm-2 control-label\">End year: </label>\n                    <div className=\"col-sm-2\">\n                        <input className=\"form-control\" type=\"number\" id=\"datemax\" min=\"1900\" max=\"2100\" onChange={this.onChange} value={maxYear} />\n                    </div>\t\t\t\t\t\n                </div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"col-sm-2 control-label\">Date Format: </label>\n                    <div className=\"col-sm-6\">\n                    \t<select id=\"dateFormat\" className=\"form-control\" onChange={this.onChange}>\n\t\t\t\t\t\t\t{Object.keys(dateFormatOptions).map(function(option){\n                        \t\treturn (<option value={option}>{dateFormatOptions[option]}</option>)\n                        \t})}                       \t\n                        </select>\n                    </div>\n\t\t\t\t</div>\n            </div>\n        )\n    }\n});\n\n/*\n *\tThis is the React class for the numeric options\n */\nNumericOptions = React.createClass({\n\t// Keep track of the inputed numbers, casting them to\n\t// interger values.\n\tonChange: function(e){\n\t\tvar options = Instrument.clone(this.props.element.Options);\n\t\tif(e.target.id === 'numericmin'){\n\t\t\toptions.MinValue = parseInt(e.target.value);\n\t\t} else if (e.target.id === 'numericmax'){\n\t\t\toptions.MaxValue = parseInt(e.target.value);\n\t\t}\n\t\tthis.props.updateState({Options: options});\n\t},\n\t// Render the HTML\n\trender: function () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<BasicOptions updateState={this.props.updateState} element={this.props.element} />\n                <div id=\"numericoptions\" className=\"options form-group\">\n\t                <label className=\"col-sm-2 control-label\">Min: </label>\n\t                <div className=\"col-sm-2\">\n\t                    <input className=\"form-control\" type=\"number\" id=\"numericmin\" onChange={this.onChange} value={this.props.element.Options.MinValue} />\n\t                </div>\n\t                <label className=\"col-sm-2 control-label\">Max: </label>\n\t                <div className=\"col-sm-2\">\n\t                    <input className=\"form-control\" type=\"number\" id=\"numericmax\" onChange={this.onChange} value={this.props.element.Options.MaxValue} />\n\t                </div>\n\t            </div>\n\t\t\t</div>\n\t\t)\n\t}\n});\n\n/*\n *\tThis is the React class for the dropdown for the\n * \tdifferent question types.\n */\nListElements = React.createClass({\n\t// Set the desired question type\n\tselectType: function (newId, newValue) {\n\t\tvar newState = {\n\t\t\t\tselected: {\n\t\t\t\t\tid: newId,\n\t\t\t\t\tvalue: newValue\n\t\t\t\t}\n\t\t\t},\n\t\t\tmulti = false,\n\t\t\ttextSize = 'small';\n\t\t// Set the options for the desired type\n\t\tswitch(newId){\n\t\t\tcase 'textarea':\n\t\t\t\ttextSize = 'large';\n\t\t\tcase 'textbox':\n\t\t\t\tnewState.Options = {\n\t\t\t\t\tType: textSize\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'multiselect':\n\t    \t\tmulti = true;\n\t    \tcase 'dropdown':\n\t    \t\tnewState.Options = {\n\t    \t\t\tValues: {},\n\t    \t\t\tAllowMultiple: multi\n\t    \t\t};\n\t    \t\tbreak;\n\t    \tcase 'date':\n\t    \t\tnewState.Options = {\n\t    \t\t\tMinDate: '',\n\t    \t\t\tMaxDate: ''\n\t    \t\t};\n\t    \t\tbreak;\n\t    \tcase 'numeric':\n\t    \t\tnewState.Options = {\n\t    \t\t\tMinValue: 0,\n\t    \t\t\tMaxValue: 0\n\t    \t\t};\n\t    \t\tbreak;\n\t\t};\n\t\tthis.props.updateState(newState);\n\t},\n\t// Render the HTML\n\trender: function () {\n\t\treturn (\n\t\t\t<div className=\"form-group\">\n\t\t\t    <label for=\"selected-input\" className=\"col-sm-2 control-label\">Question Type:</label>\n\t            <div className=\"col-sm-4\">\n\t                <div className=\"btn-group\">\n\t                    <button id=\"selected-input\" type=\"button\" className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n\t                        <span id=\"search_concept\">{this.props.value} </span>\n\t                        <span className=\"caret\"></span>\n\t\t\t\t        </button>\n\t\t\t\t        <ul className=\"dropdown-menu\" role=\"menu\">\n\t\t\t                <li>\n\t\t\t                    <div className=\"col-sm-12\"><h5 className=\"\">Information</h5></div>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"header\", \"Header\")}>\n\t\t\t                    <a id=\"header\" className=\"option\" title=\"Centered, header information\">Header</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"label\", \"Label\")}>\n\t\t\t                    <a id=\"label\" className=\"option\" title=\"Unemphasized display text\">Label</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"score\", \"Scored Field\")}>\n\t\t\t                    <a id=\"scored\" className=\"option\" title=\"Column which stores calculated data\">Scored Field</a>\n\t\t\t                </li>\n\t\t\t                <li className=\"divider\"></li>\n\t\t\t                <li>\n\t\t\t                    <div className=\"col-sm-12\"><h5 className=\"\">Data entry</h5></div>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"textbox\", \"Textbox\")}>\n\t\t\t                    <a id=\"textbox\" className=\"option\" title=\"Text box for user data entry\">Textbox</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"textarea\", \"Textarea\")}>\n\t\t\t                    <a id=\"textarea\" className=\"option\" title=\"Larger text area for data entry\">Textarea</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"dropdown\", \"Dropdown\")}>\n\t\t\t                    <a id=\"dropdown\" className=\"option\" title=\"Dropdown menu for users to select data from\">Dropdown</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"multiselect\", \"Multiselect\")}>\n\t\t\t                    <a id=\"multiselect\" className=\"option\" title=\"Data entry where multiple options may be selected\">Multiselect</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"date\", \"Date\")}>\n\t\t\t                    <a id=\"date\" className=\"option\" title=\"User data entry of a date\">Date</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"numeric\", \"Numeric\")}>\n\t\t\t                    <a id=\"numeric\" className=\"option\" title=\"User data entry of a number\">Numeric</a>\n\t\t\t                </li>\n\t\t\t                <li className=\"divider\"></li>\n\t\t\t                <li>\n\t\t\t                    <div className=\"col-sm-12\"><h5 className=\"\">Formatting</h5></div>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"line\", \"Blank Line\")}>\n\t\t\t                    <a id=\"line\" className=\"option\" title=\"Empty line\">Blank Line</a>\n\t\t\t                </li>\n\t\t\t                <li onClick={this.selectType.bind(this, \"page-break\", \"Page Break\")}>\n\t\t\t                    <a id=\"page-break\" className=\"option\" title=\"Start a new page\">Page Break</a>\n\t\t\t                </li>\n\t\t\t            </ul>\n\t                </div>\n\t            </div>\n\t        </div>\n\t\t)\n\t}\n});\n\n/*\n *\tThis is the React class for adding a new element or\n * \tediting an exsiting one\n */\nAddElement = React.createClass({\n\t// Keep track of the current element state\n\tgetInitialState: function() {\n\t\tvar state;\n\t\tif(this.props.element){\n\t\t\t// Editing an element, set to elements state\n\t\t\tstate = {\n\t\t\t\tOptions: Instrument.clone(this.props.element.Options),\n\t\t \t\tDescription: Instrument.clone(this.props.element.Description),\n\t\t \t\tName: Instrument.clone(this.props.element.Name),\n\t\t \t\tselected: Instrument.clone(this.props.element.selected)\n\t\t\t}\n\t\t} else {\n\t\t\tstate = {\n\t\t\t\tOptions: {},\n\t\t \t\tDescription: '',\n\t\t \t\tName: '',\n\t\t \t\tselected: {\n\t\t \t\t\tid: '',\n\t\t \t\t\tvalue: 'Select One'\n\t\t \t\t}\n\t\t\t}\n\t\t}\n\t \treturn state;\n\t},\n\t// Update element state\n\tupdateState: function(newState) {\n\t\tthis.setState(newState);\n\t},\n\t// Add a question to the buildPane\n    addQuestion: function () {\n\t\tvar selected = this.state.selected.id,\n\t\t\tquestionText = this.state.Description,\n\t\t\tquestionName = this.state.Name,\n\t\t\thasError = false,\n\t\t\telement;\n\n\t\tif (!selected) {\n\t\t\t// Error, no element selected, alert the user and return\n\t\t\talert(\"No element type selected\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (selected == 'date') {\n\t\t\tvar min = this.state.Options.MinDate,\n\t\t\t\tmax = this.state.Options.MaxDate;\n\n\t\t\tvar minDate = Date.parse(min),\n\t\t\t\tmaxDate = Date.parse(max);\n\n\t\t\tif ( (isNaN(minDate) && min != '') || (isNaN(maxDate) && max != '') ) {\n\t\t\t\tvar temp = (this.state.error) ? this.state.error : {};\n\t\t\t\t\n\t\t\t\ttemp.dateOption = \"Invalid date provided\";\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: temp\n\t\t\t\t});\n\t\t\t\thasError = true;\n\t\t\t}\n\n\t\t\tif (minDate > maxDate && min != '' && max != '') {\n\t\t\t\tvar temp = (this.state.error) ? this.state.error : {}; \n\n\t\t\t\ttemp.dateOption = \"End year append befor start year\";\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: temp\n\t\t\t\t}); \n\t\t\t\thasError = true;\n\t\t\t}\n\t\t\t\n\t\t\tif(!hasError && this.state.error) {\n\t\t\t\t\tvar temp = this.state.error;\n\t\t\t\t\tdelete temp.dateOption;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: temp\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t    if(questionText == '' && selected != 'line') {\n\t    \t// Error, question text is required. Set the element error flag\n\t    \t// for the questionText with message. Set the hasError flag\n\t    \tvar temp = (this.state.error) ? this.state.error : {};\n\t        if(selected == 'page-break') {\n\t        \ttemp.questionText = \"Must use question text as page header\";\n\t        } else {\n\t        \ttemp.questionText = \"No question text specified\";\n\t        }\n\t        this.setState({\n\t\t\t\terror: temp\n\t\t\t});\n\t\t\thasError = true;\n\t    }\n\n\t    if (!hasError && this.state.error) {\n\t    \t// No error, remove the elememt's questionText error flag\n\t    \t// if set\n\t    \tvar temp = this.state.error;\n\t    \tdelete temp.questionText;\n\t    \tthis.setState({\n\t\t\t\terror: temp\n\t\t\t});\n\t    }\n\n\t    if(questionName == '' && selected != \"header\" && selected != \"label\" && selected != 'line' && selected != 'page-break') {\n\t    \t// Error, question name is needed for the desired type. Set the element error flag\n\t    \t// for the questionName with message. Set the hasError flag\n\t    \tvar temp = (this.state.error) ? this.state.error : {};\n        \ttemp.questionName = \"Must specifiy name for database to save value into\";\n\t    \tthis.setState({\n\t\t\t\terror: temp\n\t\t\t});\n\t        hasError = true;\n\t    } else if (this.state.error) {\n\t    \t// No error, remove the elememt's questionName error flag\n\t    \t// if set\n\t    \tvar temp = this.state.error;\n\t    \tdelete temp.questionName;\n\t    \tthis.setState({\n\t\t\t\terror: temp\n\t\t\t});\n\t    }\n\t    if (hasError) {\n\t    \t// An error is present, return\n\t    \treturn;\n\t    }\n\t    // Setup the desired element to be added\n\t    switch(selected){\n\t    \tcase 'header':\n\t\t\tcase 'label':\n\t\t\t\tquestionName = '';\n\t\t\t\tbreak;\n\t    \tcase 'textbox':\n\t    \tcase 'textarea':\n\t    \t\tselected = 'text';\n\t    \t\tbreak;\n\t    \tcase 'dropdown':\n\t     \tcase 'multiselect':\n\t     \t\tselected = 'select';\n\t     \t\tbreak;\n\t     \tcase 'page-break':\n\t     \t\t// If page-break, add new page to the buildPane\n\t     \t\t// element list\n\t     \t\tthis.props.addPage(questionText);\n\t     \t\treturn;\n\t    }\n\t    // Remove all error flags\n\t    delete this.state.error;\n\t    var element = {\n\t    \tType: selected,\n\t    \tDescription: questionText,\n\t    \tName: questionName,\n\t    \tOptions: this.state.Options,\n\t    \tselected: this.state.selected\n\t    };\n\n\t    // Add/Update the Page's element array. The updateQuestion returns true\n\t    // if element was added/updated, false if the element name already exists.\n\t    if(typeof this.props.index !== 'undefined'){\n\t    \t// If editing, supply updateQuestion with the elements index in the\n\t    \t// Page's element array.\n\t    \thasError = !this.props.updateQuestions(element, this.props.index);\n\t    } else {\n\t    \thasError = !this.props.updateQuestions(element);\n\t    }\n\t    if (hasError) {\n\t    \t// Error, element name already exists. Set the element error flag\n\t    \t// for the questionName with message.\n\t    \tthis.setState(function(state){\n        \t\tvar temp = (state.error) ? state.error : {};\n        \t\ttemp.questionName = \"Duplicate question name\";\n\t\t\t\treturn {\n\t\t\t\t\terror: temp\n\t\t\t\t};\n\t\t\t});\n\t    }\n\t},\n\t// Add an option to the options array\n\taddOption: function (multi) {\n\t\t// Use a function to update the state to enqueue an atomic\n\t\t// update that consults the previous value of state before\n\t\t// setting any values\n\t\tthis.setState(function(state){\n\t\t\tvar temp = state.options,\n\t\t\t\toption = multi ? $(\"#newmultiSelectOption\").val() : $(\"#newSelectOption\").val();\n\t\t\ttemp.push(option);\n\t\t\treturn {\n\t\t\t\toptions: temp\n\t\t\t};\n\t\t});\n\t},\n\t// Reset the options array\n\tresetOptions: function(){\n\t\tthis.setState({\n\t\t\toptions: []\n\t\t});\n\t},\n\t// Render the HTML\n\trender: function () {\n\t\tvar questionInput,\n\t\t\tmulti = false,\n\t\t\toptions,\n\t\t\theader = '',\n\t\t\tbuttons;\n\t\t// Set the inputs to display based on the desired element type\n\t\tswitch(this.state.selected.id){\n\t\t\tcase 'header':\n\t\t\tcase 'label':\n\t\t\tcase 'page-break':\n\t\t\t\tquestionInput = <QuestionText updateState={this.updateState} element={this.state}/>\n\t\t\t\tbreak;\n\t\t\tcase 'score':\n\t\t\tcase 'textbox':\n\t\t\tcase 'textarea':\n\t\t\t\tquestionInput = <BasicOptions updateState={this.updateState} element={this.state}/>\n\t\t\t\tbreak;\n\t    \tcase 'multiselect':\n\t    \tcase 'dropdown':\n\t    \t\tquestionInput = <DropdownOptions updateState={this.updateState} element={this.state}/>\n\t    \t\tbreak;\n\t    \tcase 'date':\n\t    \t\tquestionInput = <DateOptions updateState={this.updateState} element={this.state}/>\n\t    \t\tbreak;\n\t    \tcase 'numeric':\n\t    \t\tquestionInput = <NumericOptions updateState={this.updateState} element={this.state}/>\n\t    \t\tbreak;\n\t    \tcase 'defualt':\n\t    \t\tbreak;\n\t\t}\n\t\t// Set the button/header based on whether you are editing or adding an element.\n\t\tif(this.props.element){\n\t\t\tbuttons = (\n\t\t\t\t<input className=\"btn btn-default\" type=\"button\" value=\"Edit Row\" onClick={this.addQuestion} />\n\t\t\t)\n\t\t} else {\n\t\t\theader = (\n\t\t\t\t<h2>Add Question</h2>\n\t\t\t);\n\t\t\tbuttons = (\n\t\t\t\t<input className=\"btn btn-default\" type=\"button\" value=\"Add Row\" onClick={this.addQuestion} />\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t{header}\n\t\t\t    <div className=\"form-horizontal\" role=\"form\">\n\t\t\t    \t<ListElements updateState={this.updateState} value={this.state.selected.value}/>\n\t\t\t    \t{questionInput}\n\t\t\t        <div className=\"form-group\">\n\t\t\t            <div className=\"col-sm-offset-2 col-sm-10\">\n\t\t\t                {buttons}\n\t\t\t            </div>\n\t\t\t        </div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t)\n\t}\n});\n"]}